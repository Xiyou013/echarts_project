{"ast":null,"code":"import { onMounted, watch, ref, reactive } from \"@vue/runtime-core\"; // import router from '@/router/index'\n// import { list } from \"@/utils/enum\";\n// import useSecondMenu from \"@/utils/secondMenu\";\n\nexport default {\n  name: \"left-body\",\n  components: {},\n  props: {\n    navID: {\n      type: Number,\n      default: 9\n    }\n  },\n\n  setup(props, context) {\n    let menuList = reactive({\n      menuList: []\n    });\n    let isIndex = ref(0);\n    let navId = ref(1);\n\n    const getSecondMenu = id => {\n      let menuList1 = [];\n      navId.value = Number(props.navID + \"1\"); // console.log(\"---id---111\", id, \"---navId---\", navId);\n\n      list.forEach(element => {\n        // console.log(\"---element---\", element);\n        if (element.id == id) {\n          element.secondMenuList.forEach(item => {\n            menuList1.push(item);\n          });\n          menuList.menuList = menuList1;\n        }\n      }); // console.log(\"---menuList---\", menuList);\n    };\n\n    onMounted(() => {//   navId.value = Number(props.navID + \"1\");\n      // console.log(\"---props.navID1111---\", props, props.navID);\n      // getSecondMenu(props.navID);\n      // retPath(props.navID, navId);\n    });\n    watch(() => props.navID, (newValue, oldValue) => {\n      // navId.value = Number(props.navID + \"1\");\n      isIndex.value = 0; // console.log(\"---navID---\", newValue, oldValue);\n\n      getSecondMenu(props.navID);\n      retPath(props.navID, navId);\n      if (newValue || oldValue) return;\n    });\n\n    function toPage(item, index) {\n      isIndex.value = index;\n      navId.value = item.id; // console.log(\"---item---\", item, isIndex, navId);\n\n      retPath(props.navID, navId);\n    }\n\n    function retPath(navID, id) {\n      // console.log(\"---id222---:\", navID, id, list);\n      list.forEach(element => {\n        if (element.id === navID) {\n          element.secondMenuList.forEach(item => {\n            if (item.id == id.value) {\n              let path = item.path;\n              context.emit('getPath', path);\n            }\n          });\n        }\n      });\n    }\n\n    return {\n      menuList,\n      isIndex,\n      navId,\n      toPage\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAeA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,QAAhC,QAAgD,mBAAhD,C,CACA;AACA;AACA;;AAEA,eAAe;EACbC,IAAI,EAAE,WADO;EAEbC,UAAU,EAAE,EAFC;EAGbC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MADD;MAELC,OAAO,EAAE;IAFJ;EADF,CAHM;;EASbC,KAAK,CAACL,KAAD,EAAOM,OAAP,EAAgB;IACnB,IAAIC,QAAO,GAAIV,QAAQ,CAAC;MACtBU,QAAQ,EAAE;IADY,CAAD,CAAvB;IAGA,IAAIC,OAAM,GAAIZ,GAAG,CAAC,CAAD,CAAjB;IACA,IAAIa,KAAI,GAAIb,GAAG,CAAC,CAAD,CAAf;;IAEA,MAAMc,aAAY,GAAKC,EAAD,IAAQ;MAC5B,IAAIC,SAAQ,GAAI,EAAhB;MACAH,KAAK,CAACI,KAAN,GAAcV,MAAM,CAACH,KAAK,CAACC,KAAN,GAAc,GAAf,CAApB,CAF4B,CAG5B;;MACAa,IAAI,CAACC,OAAL,CAAcC,OAAD,IAAa;QACxB;QACA,IAAIA,OAAO,CAACL,EAAR,IAAcA,EAAlB,EAAsB;UACpBK,OAAO,CAACC,cAAR,CAAuBF,OAAvB,CAAgCG,IAAD,IAAU;YACvCN,SAAS,CAACO,IAAV,CAAeD,IAAf;UACD,CAFD;UAGAX,QAAQ,CAACA,QAAT,GAAoBK,SAApB;QACF;MACD,CARD,EAJ4B,CAa5B;IACD,CAdD;;IAgBAlB,SAAS,CAAC,MAAM,CACd;MACA;MACA;MACA;IACD,CALQ,CAAT;IAMAC,KAAK,CACH,MAAMK,KAAK,CAACC,KADT,EAEH,CAACmB,QAAD,EAAWC,QAAX,KAAwB;MACtB;MACAb,OAAO,CAACK,KAAR,GAAgB,CAAhB,CAFsB,CAGtB;;MACAH,aAAa,CAACV,KAAK,CAACC,KAAP,CAAb;MACAqB,OAAO,CAACtB,KAAK,CAACC,KAAP,EAAcQ,KAAd,CAAP;MACA,IAAGW,QAAO,IAAKC,QAAf,EAAyB;IAC3B,CATG,CAAL;;IAWA,SAASE,MAAT,CAAgBL,IAAhB,EAAsBM,KAAtB,EAA6B;MAC3BhB,OAAO,CAACK,KAAR,GAAgBW,KAAhB;MACAf,KAAK,CAACI,KAAN,GAAcK,IAAI,CAACP,EAAnB,CAF2B,CAG3B;;MACAW,OAAO,CAACtB,KAAK,CAACC,KAAP,EAAcQ,KAAd,CAAP;IACF;;IAEA,SAASa,OAAT,CAAiBrB,KAAjB,EAAwBU,EAAxB,EAA4B;MAC1B;MACAG,IAAI,CAACC,OAAL,CAAcC,OAAD,IAAa;QACxB,IAAIA,OAAO,CAACL,EAAR,KAAeV,KAAnB,EAA0B;UACxBe,OAAO,CAACC,cAAR,CAAuBF,OAAvB,CAAgCG,IAAD,IAAU;YACvC,IAAIA,IAAI,CAACP,EAAL,IAAWA,EAAE,CAACE,KAAlB,EAAyB;cACvB,IAAIY,IAAG,GAAIP,IAAI,CAACO,IAAhB;cACAnB,OAAO,CAACoB,IAAR,CAAa,SAAb,EAAuBD,IAAvB;YACF;UACD,CALD;QAMF;MACD,CATD;IAUF;;IAEA,OAAO;MACLlB,QADK;MAELC,OAFK;MAGLC,KAHK;MAILc;IAJK,CAAP;EAMD;;AA5EY,CAAf","names":["onMounted","watch","ref","reactive","name","components","props","navID","type","Number","default","setup","context","menuList","isIndex","navId","getSecondMenu","id","menuList1","value","list","forEach","element","secondMenuList","item","push","newValue","oldValue","retPath","toPage","index","path","emit"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\views\\test3\\left\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"left\">\r\n    <div\r\n      class=\"second_menu\"\r\n      :class=\"isIndex == index ? 'btn1' : ''\"\r\n      v-for=\"(item, index) in menuList.menuList\"\r\n      :key=\"index\"\r\n      @click=\"toPage(item, index)\"\r\n    >\r\n      {{ item.name }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, watch, ref, reactive } from \"@vue/runtime-core\";\r\n// import router from '@/router/index'\r\n// import { list } from \"@/utils/enum\";\r\n// import useSecondMenu from \"@/utils/secondMenu\";\r\n\r\nexport default {\r\n  name: \"left-body\",\r\n  components: {},\r\n  props: {\r\n    navID: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n  },\r\n  setup(props,context) {\r\n    let menuList = reactive({\r\n      menuList: [],\r\n    });\r\n    let isIndex = ref(0);\r\n    let navId = ref(1);\r\n\r\n    const getSecondMenu = (id) => {\r\n      let menuList1 = [];\r\n      navId.value = Number(props.navID + \"1\");\r\n      // console.log(\"---id---111\", id, \"---navId---\", navId);\r\n      list.forEach((element) => {\r\n        // console.log(\"---element---\", element);\r\n        if (element.id == id) {\r\n          element.secondMenuList.forEach((item) => {\r\n            menuList1.push(item);\r\n          });\r\n          menuList.menuList = menuList1;\r\n        }\r\n      });\r\n      // console.log(\"---menuList---\", menuList);\r\n    };\r\n\r\n    onMounted(() => {\r\n      //   navId.value = Number(props.navID + \"1\");\r\n      // console.log(\"---props.navID1111---\", props, props.navID);\r\n      // getSecondMenu(props.navID);\r\n      // retPath(props.navID, navId);\r\n    });\r\n    watch(\r\n      () => props.navID,\r\n      (newValue, oldValue) => {\r\n        // navId.value = Number(props.navID + \"1\");\r\n        isIndex.value = 0;\r\n        // console.log(\"---navID---\", newValue, oldValue);\r\n        getSecondMenu(props.navID);\r\n        retPath(props.navID, navId);\r\n        if(newValue || oldValue) return\r\n      }\r\n    );\r\n    function toPage(item, index) {\r\n      isIndex.value = index;\r\n      navId.value = item.id;\r\n      // console.log(\"---item---\", item, isIndex, navId);\r\n      retPath(props.navID, navId);\r\n    }\r\n\r\n    function retPath(navID, id) {\r\n      // console.log(\"---id222---:\", navID, id, list);\r\n      list.forEach((element) => {\r\n        if (element.id === navID) {\r\n          element.secondMenuList.forEach((item) => {\r\n            if (item.id == id.value) {\r\n              let path = item.path;\r\n              context.emit('getPath',path)\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      menuList,\r\n      isIndex,\r\n      navId,\r\n      toPage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.left {\r\n  width: 230px;\r\n  height: 100%;\r\n  //   background-color: cadetblue;\r\n}\r\n.second_menu {\r\n  width: 100%;\r\n  height: 50px;\r\n  // background-color: burlywood;\r\n  margin: 5px 0px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n}\r\n.second_menu:hover {\r\n  background-color: rgba(100, 149, 237, 0.5);\r\n  color: #fff;\r\n}\r\n.btn1 {\r\n  background-color: #6495ED;\r\n  color: #fff;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}