{"ast":null,"code":"import { useSlots, ref, computed } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\n\nconst useCalendar = (props, emit, componentName) => {\n  const solts = useSlots();\n  const {\n    t,\n    lang\n  } = useLocale();\n  const selectedDay = ref();\n  const now = dayjs().locale(lang.value);\n  const realSelectedDay = computed({\n    get() {\n      if (!props.modelValue) return selectedDay.value;\n      return date.value;\n    },\n\n    set(val) {\n      if (!val) return;\n      selectedDay.value = val;\n      const result = val.toDate();\n      emit(INPUT_EVENT, result);\n      emit(UPDATE_MODEL_EVENT, result);\n    }\n\n  });\n  const validatedRange = computed(() => {\n    if (!props.range) return [];\n    const rangeArrDayjs = props.range.map(_ => dayjs(_).locale(lang.value));\n    const [startDayjs, endDayjs] = rangeArrDayjs;\n\n    if (startDayjs.isAfter(endDayjs)) {\n      debugWarn(componentName, \"end time should be greater than start time\");\n      return [];\n    }\n\n    if (startDayjs.isSame(endDayjs, \"month\")) {\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    } else {\n      if (startDayjs.add(1, \"month\").month() !== endDayjs.month()) {\n        debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n        return [];\n      }\n\n      return calculateValidatedDateRange(startDayjs, endDayjs);\n    }\n  });\n  const date = computed(() => {\n    if (!props.modelValue) {\n      if (realSelectedDay.value) {\n        return realSelectedDay.value;\n      } else if (validatedRange.value.length) {\n        return validatedRange.value[0][0];\n      }\n\n      return now;\n    } else {\n      return dayjs(props.modelValue).locale(lang.value);\n    }\n  });\n  const prevMonthDayjs = computed(() => date.value.subtract(1, \"month\").date(1));\n  const nextMonthDayjs = computed(() => date.value.add(1, \"month\").date(1));\n  const prevYearDayjs = computed(() => date.value.subtract(1, \"year\").date(1));\n  const nextYearDayjs = computed(() => date.value.add(1, \"year\").date(1));\n  const i18nDate = computed(() => {\n    const pickedMonth = `el.datepicker.month${date.value.format(\"M\")}`;\n    return `${date.value.year()} ${t(\"el.datepicker.year\")} ${t(pickedMonth)}`;\n  });\n\n  const calculateValidatedDateRange = (startDayjs, endDayjs) => {\n    const firstDay = startDayjs.startOf(\"week\");\n    const lastDay = endDayjs.endOf(\"week\");\n    const firstMonth = firstDay.get(\"month\");\n    const lastMonth = lastDay.get(\"month\");\n\n    if (firstMonth === lastMonth) {\n      return [[firstDay, lastDay]];\n    } else if (firstMonth + 1 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf(\"month\");\n      const lastMonthFirstDay = lastDay.startOf(\"month\");\n      const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, \"week\");\n      const lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n      return [[firstDay, firstMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n    } else if (firstMonth + 2 === lastMonth || (firstMonth + 1) % 11 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf(\"month\");\n      const secondMonthFirstDay = firstDay.add(1, \"month\").startOf(\"month\");\n      const secondMonthStartDay = firstMonthLastDay.isSame(secondMonthFirstDay, \"week\") ? secondMonthFirstDay.add(1, \"week\") : secondMonthFirstDay;\n      const secondMonthLastDay = secondMonthStartDay.endOf(\"month\");\n      const lastMonthFirstDay = lastDay.startOf(\"month\");\n      const lastMonthStartDay = secondMonthLastDay.isSame(lastMonthFirstDay, \"week\") ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n      return [[firstDay, firstMonthLastDay], [secondMonthStartDay.startOf(\"week\"), secondMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n    } else {\n      debugWarn(componentName, \"start time and end time interval must not exceed two months\");\n      return [];\n    }\n  };\n\n  const pickDay = day => {\n    realSelectedDay.value = day;\n  };\n\n  const selectDate = type => {\n    const dateMap = {\n      \"prev-month\": prevMonthDayjs.value,\n      \"next-month\": nextMonthDayjs.value,\n      \"prev-year\": prevYearDayjs.value,\n      \"next-year\": nextYearDayjs.value,\n      today: now\n    };\n    const day = dateMap[type];\n\n    if (!day.isSame(date.value, \"day\")) {\n      pickDay(day);\n    }\n  };\n\n  useDeprecated({\n    from: '\"dateCell\"',\n    replacement: '\"date-cell\"',\n    scope: \"ElCalendar\",\n    version: \"2.3.0\",\n    ref: \"https://element-plus.org/en-US/component/calendar.html#slots\",\n    type: \"Slot\"\n  }, computed(() => !!solts.dateCell));\n  return {\n    calculateValidatedDateRange,\n    date,\n    realSelectedDay,\n    pickDay,\n    selectDate,\n    validatedRange,\n    t,\n    i18nDate\n  };\n};\n\nexport { useCalendar };","map":{"version":3,"mappings":"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","names":["useCalendar","props","emit","componentName","solts","useSlots","t","lang","useLocale","selectedDay","ref","now","dayjs","locale","value","realSelectedDay","computed","get","modelValue","date","set","val","result","toDate","INPUT_EVENT","UPDATE_MODEL_EVENT","validatedRange","range","rangeArrDayjs","map","_","startDayjs","endDayjs","isAfter","debugWarn","isSame","calculateValidatedDateRange","add","month","length","prevMonthDayjs","subtract","nextMonthDayjs","prevYearDayjs","nextYearDayjs","i18nDate","pickedMonth","format","year","firstDay","startOf","lastDay","endOf","firstMonth","lastMonth","firstMonthLastDay","lastMonthFirstDay","isSameWeek","lastMonthStartDay","secondMonthFirstDay","secondMonthStartDay","secondMonthLastDay","pickDay","day","selectDate","type","dateMap","today","useDeprecated","from","replacement","scope","version","dateCell"],"sources":["../../../../../../packages/components/calendar/src/use-calendar.ts"],"sourcesContent":["import { computed, ref, useSlots } from 'vue'\nimport dayjs from 'dayjs'\nimport { useDeprecated, useLocale } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport { INPUT_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ComputedRef, SetupContext } from 'vue'\nimport type { Dayjs } from 'dayjs'\nimport type { CalendarDateType, CalendarEmits, CalendarProps } from './calendar'\n\nexport const useCalendar = (\n  props: CalendarProps,\n  emit: SetupContext<CalendarEmits>['emit'],\n  componentName: string\n) => {\n  const solts = useSlots()\n  const { t, lang } = useLocale()\n\n  const selectedDay = ref<Dayjs>()\n  const now = dayjs().locale(lang.value)\n\n  const realSelectedDay = computed<Dayjs | undefined>({\n    get() {\n      if (!props.modelValue) return selectedDay.value\n      return date.value\n    },\n    set(val) {\n      if (!val) return\n      selectedDay.value = val\n      const result = val.toDate()\n\n      emit(INPUT_EVENT, result)\n      emit(UPDATE_MODEL_EVENT, result)\n    },\n  })\n\n  // if range is valid, we get a two-digit array\n  const validatedRange = computed(() => {\n    if (!props.range) return []\n    const rangeArrDayjs = props.range.map((_) => dayjs(_).locale(lang.value))\n    const [startDayjs, endDayjs] = rangeArrDayjs\n    if (startDayjs.isAfter(endDayjs)) {\n      debugWarn(componentName, 'end time should be greater than start time')\n      return []\n    }\n    if (startDayjs.isSame(endDayjs, 'month')) {\n      // same month\n      return calculateValidatedDateRange(startDayjs, endDayjs)\n    } else {\n      // two months\n      if (startDayjs.add(1, 'month').month() !== endDayjs.month()) {\n        debugWarn(\n          componentName,\n          'start time and end time interval must not exceed two months'\n        )\n        return []\n      }\n      return calculateValidatedDateRange(startDayjs, endDayjs)\n    }\n  })\n\n  const date: ComputedRef<Dayjs> = computed(() => {\n    if (!props.modelValue) {\n      if (realSelectedDay.value) {\n        return realSelectedDay.value\n      } else if (validatedRange.value.length) {\n        return validatedRange.value[0][0]\n      }\n      return now\n    } else {\n      return dayjs(props.modelValue).locale(lang.value)\n    }\n  })\n  const prevMonthDayjs = computed(() => date.value.subtract(1, 'month').date(1))\n  const nextMonthDayjs = computed(() => date.value.add(1, 'month').date(1))\n  const prevYearDayjs = computed(() => date.value.subtract(1, 'year').date(1))\n  const nextYearDayjs = computed(() => date.value.add(1, 'year').date(1))\n\n  const i18nDate = computed(() => {\n    const pickedMonth = `el.datepicker.month${date.value.format('M')}`\n    return `${date.value.year()} ${t('el.datepicker.year')} ${t(pickedMonth)}`\n  })\n\n  // https://github.com/element-plus/element-plus/issues/3155\n  // Calculate the validate date range according to the start and end dates\n  const calculateValidatedDateRange = (\n    startDayjs: Dayjs,\n    endDayjs: Dayjs\n  ): [Dayjs, Dayjs][] => {\n    const firstDay = startDayjs.startOf('week')\n    const lastDay = endDayjs.endOf('week')\n    const firstMonth = firstDay.get('month')\n    const lastMonth = lastDay.get('month')\n\n    // Current mouth\n    if (firstMonth === lastMonth) {\n      return [[firstDay, lastDay]]\n    }\n    // Two adjacent months\n    else if (firstMonth + 1 === lastMonth) {\n      const firstMonthLastDay = firstDay.endOf('month')\n      const lastMonthFirstDay = lastDay.startOf('month')\n\n      // Whether the last day of the first month and the first day of the last month is in the same week\n      const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, 'week')\n      const lastMonthStartDay = isSameWeek\n        ? lastMonthFirstDay.add(1, 'week')\n        : lastMonthFirstDay\n\n      return [\n        [firstDay, firstMonthLastDay],\n        [lastMonthStartDay.startOf('week'), lastDay],\n      ]\n    }\n    // Three consecutive months (compatible: 2021-01-30 to 2021-02-28)\n    else if (\n      firstMonth + 2 === lastMonth ||\n      (firstMonth + 1) % 11 === lastMonth\n    ) {\n      const firstMonthLastDay = firstDay.endOf('month')\n      const secondMonthFirstDay = firstDay.add(1, 'month').startOf('month')\n\n      // Whether the last day of the first month and the second month is in the same week\n      const secondMonthStartDay = firstMonthLastDay.isSame(\n        secondMonthFirstDay,\n        'week'\n      )\n        ? secondMonthFirstDay.add(1, 'week')\n        : secondMonthFirstDay\n\n      const secondMonthLastDay = secondMonthStartDay.endOf('month')\n      const lastMonthFirstDay = lastDay.startOf('month')\n\n      // Whether the last day of the second month and the last day of the last month is in the same week\n      const lastMonthStartDay = secondMonthLastDay.isSame(\n        lastMonthFirstDay,\n        'week'\n      )\n        ? lastMonthFirstDay.add(1, 'week')\n        : lastMonthFirstDay\n\n      return [\n        [firstDay, firstMonthLastDay],\n        [secondMonthStartDay.startOf('week'), secondMonthLastDay],\n        [lastMonthStartDay.startOf('week'), lastDay],\n      ]\n    }\n    // Other cases\n    else {\n      debugWarn(\n        componentName,\n        'start time and end time interval must not exceed two months'\n      )\n      return []\n    }\n  }\n\n  const pickDay = (day: Dayjs) => {\n    realSelectedDay.value = day\n  }\n\n  const selectDate = (type: CalendarDateType) => {\n    const dateMap: Record<CalendarDateType, Dayjs> = {\n      'prev-month': prevMonthDayjs.value,\n      'next-month': nextMonthDayjs.value,\n      'prev-year': prevYearDayjs.value,\n      'next-year': nextYearDayjs.value,\n      today: now,\n    }\n\n    const day = dateMap[type]\n\n    if (!day.isSame(date.value, 'day')) {\n      pickDay(day)\n    }\n  }\n\n  useDeprecated(\n    {\n      from: '\"dateCell\"',\n      replacement: '\"date-cell\"',\n      scope: 'ElCalendar',\n      version: '2.3.0',\n      ref: 'https://element-plus.org/en-US/component/calendar.html#slots',\n      type: 'Slot',\n    },\n    computed(() => !!solts.dateCell)\n  )\n\n  return {\n    calculateValidatedDateRange,\n    date,\n    realSelectedDay,\n    pickDay,\n    selectDate,\n    validatedRange,\n    t,\n    i18nDate,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}