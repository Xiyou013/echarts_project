{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    ref: \"vehicle1\",\n    id: $setup.vehicle2\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;uBACIA,oBAAyC,KAAzC,EAAyC;IAApCC,GAAG,EAAC,UAAgC;IAApBC,EAAE,EAAEC;EAAgB,CAAzC;;EAAA","names":["_createElementBlock","ref","id","$setup"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\views\\test2\\components\\vehicleEchartsTwo.vue"],"sourcesContent":["<template>\r\n    <div ref=\"vehicle1\" :id=\"vehicle2\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport dayjs from 'dayjs'\r\nimport { inject, nextTick, onMounted, reactive, ref } from 'vue'\r\n\r\nlet echarts = inject('ec')\r\n// const colorList = ['#F1B164', '#05D2FC']\r\nlet vehicle2 = 'vehicle2'\r\nlet myChart\r\n\r\n// const changeSize = (val) => {\r\n//     let nowClientWidth =\r\n//         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n//     // console.log('nowClientWidth', nowClientWidth)\r\n//     return val * (nowClientWidth / 1920)\r\n// }\r\n\r\n// const nowSize = (val) => {\r\n//     //   console.log(val instanceof Array)\r\n//     let data = ''\r\n//     let arr = []\r\n//     if (typeof val === 'object') {\r\n//         if (val instanceof Array) {\r\n//             val.forEach((item) => {\r\n//                 let size = changeSize(item)\r\n//                 arr.push(size)\r\n//             })\r\n//             data = arr\r\n//         }\r\n//     } else {\r\n//         data = changeSize(val)\r\n//     }\r\n//     //   console.log('data::', data)\r\n//     return data\r\n// }\r\n\r\n// const getListData = () => {\r\n// data.forEach((item, index) => {\r\n//     item.lineStyle = {\r\n//         color: colorList[index],\r\n//         width: 2\r\n//     }\r\n//     item.yAxisIndex = index\r\n// })\r\n\r\n// }\r\n\r\nlet time = ref([\r\n    {\r\n        name: 'Direct',\r\n        type: 'bar',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            320, 332, 301, 334, 390, 330, 320\r\n        ]\r\n    },\r\n    {\r\n        name: 'Email',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            120, 132, 101, 134, 90, 230, 210\r\n        ]\r\n    },\r\n    {\r\n        name: 'Union Ads',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            220, 182, 191, 234, 290, 330, 310\r\n        ]\r\n    },\r\n    {\r\n        name: 'Video Ads',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            150, 232, 201, 154, 190, 330, 410\r\n        ]\r\n    },\r\n])\r\n\r\nconst data = reactive({\r\n    options: {\r\n        // 图例设置\r\n        // legend: {},\r\n        // 在canvas中占据的大小\r\n        grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            top: '15%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        // 辅助线提示\r\n        tooltip: {\r\n            trigger: 'axis'\r\n        },\r\n        xAxis: [\r\n            {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            }\r\n        ],\r\n        yAxis: [\r\n            {\r\n                type: 'value'\r\n            }\r\n        ],\r\n        axisLabel: {\r\n            // 坐标轴刻度标签的相关设置\r\n            show: true, // 控制显隐\r\n            color: '#E4E9EB', // x轴字体颜色\r\n            fontSize: 17, //\r\n            margin: 15, // x轴标签距离x轴距离\r\n            formatter: (value) => {\r\n                return dayjs(new Date(value)).format('HH:mm')\r\n            }\r\n        },\r\n        // x轴样式设置\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#E4E9EB',\r\n                width: 2\r\n            }\r\n        },\r\n        // x轴刻度线显隐\r\n        axisTick: {\r\n            show: false\r\n        }\r\n    },\r\n    // 相关数据\r\n    series: time.value\r\n})\r\n\r\n// 初始化折线图\r\nconst initChart = () => {\r\n    // setTimeout(() => {\r\n    console.log('12132123');\r\n    // //检测是否已经存在echarts实例，如果不存在，则不再去初始化\r\n    // let myChart = echarts.getInstanceByDom(\r\n    //     document.getElementById('vehicle2')\r\n    // );\r\n    // if (myChart == null) {\r\n    //     console.log('123');\r\n    //     myChart = echarts.init(document.getElementById('vehicle2'));\r\n    //     myChart.setOption(data.options);\r\n    // }\r\n\r\n    myChart = echarts.init(document.getElementById(vehicle2))\r\n    myChart.setOption(data.options)\r\n    // }, 2000)\r\n\r\n}\r\n// 监听更改折线图y轴有关数据\r\n// const changeyAxis = () => {\r\n//     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[1].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\r\n//     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\r\n//     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\r\n//     data.options.yAxis[0].nameGap = nowSize(20)\r\n//     data.options.yAxis[1].nameGap = nowSize(20)\r\n//     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\r\n//     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\r\n// }\r\n// 监听更改折线图x轴有关数据\r\n// const changexAxis = () => {\r\n//     data.options.xAxis.axisLabel.fontSize = nowSize(17)\r\n//     data.options.xAxis.axisLabel.margin = nowSize(15)\r\n//     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\r\n// }\r\n\r\nonMounted(() => {\r\n    // getListData(time.value)\r\n    nextTick(() => {\r\n        initChart()\r\n    })\r\n    // initChart()\r\n})\r\nwindow.onresize = (ec) => {\r\n    // 监听窗口大小变化\r\n    // myChart.resize() // 自适应大小变化\r\n    console.log('22222222')\r\n    // changeyAxis()\r\n    // changexAxis()\r\n    // myChart.setOption(data.options)\r\n    myChart.resize() // 自适应大小变化\r\n    if (ec) return\r\n}\r\n</script>\r\n\r\n<style>\r\n.vehicle_echarts {\r\n    width: 92vw;\r\n    height: 28vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n.vehicle_echarts1 {\r\n    width: 65vw;\r\n    height: 35vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n#vehicle2 {\r\n    width: 90%;\r\n    /* height: 100%; */\r\n    height: inherit;\r\n    margin-left: 5%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}