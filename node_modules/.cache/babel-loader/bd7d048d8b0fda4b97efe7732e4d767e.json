{"ast":null,"code":"import { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\nimport AddDialog from \"@/components/addDialog.vue\";\nimport DetailDrawer from \"@/components/detailDrawer.vue\"; // import { reactive } from '@vue/reactivity';\n\nimport btnRestore from \"@/utils/btnRestore\";\nimport { getPersonList, getTypeList } from '@/api/echarts.js';\nexport default {\n  __name: 'personList',\n  props: {\n    searchFrom: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    let drawerDetail = reactive({\n      drawerDetail: false\n    });\n    let dialogFormVisible = reactive({\n      dialogFormVisible: false\n    });\n    let isEdit = reactive({\n      isEdit: false\n    });\n    let rowData = ref(null);\n    let persondata = reactive({\n      personList: []\n    });\n    let test = ref(null); // const listTest = [\n    //   {}\n    // ]\n\n    watch(props.searchFrom, (newValue, oldValue) => {\n      if (newValue.isSearch) {\n        console.log(\"---searchFrom---\", newValue, oldValue); // searchList(newValue);\n\n        test.value = props.searchFrom.name;\n        console.log(\"---watch.test---:\", test.value);\n      }\n\n      if (newValue.name == \"\" && newValue.attribute == \"\") {// persondata.personList = state.list;\n      }\n\n      if (newValue || oldValue) return;\n    });\n\n    function addPerson(value, row) {\n      dialogFormVisible.dialogFormVisible = true;\n      isEdit.isEdit = value;\n\n      if (value && row) {\n        rowData.value = row;\n      } else {// id.value = null\n      }\n\n      console.log(\"---addPerson.dialogFormVisible---\", dialogFormVisible);\n      btnRestore(event);\n    } // function searchList(element) {\n    //   persondata.personList = state.list.filter((item) => {\n    //     // console.log('---item---',item)\n    //     // console.log('---element---',element)\n    //     if (element.name && element.attribute) {\n    //       return element.name === item.name && element.attribute === item.type;\n    //     } else {\n    //       return element.name === item.name || element.attribute === item.type;\n    //     }\n    //   });\n    // }\n\n\n    function changeDialog(value) {\n      dialogFormVisible.dialogFormVisible = false;\n      persondata.personList = value[0]; // isEdit.isEdit = value;\n      //   id.value = null\n\n      console.log(\"---changeDialog.value---\", value);\n    }\n\n    function changeIsEdit(value) {\n      isEdit.isEdit = value;\n    }\n\n    function changeDrawer() {\n      drawerDetail.drawerDetail = false;\n    }\n\n    function onDetails() {\n      drawerDetail.drawerDetail = true;\n      console.log(\"---onDetails.drawerDetail---\", drawerDetail);\n      btnRestore(event);\n    }\n\n    function onDelete(row, index) {\n      console.log(\"---onDelete.row---\", row, index);\n      persondata.personList.splice(index, 1); // store.commit(\"changeList\", persondata.personList);\n      // console.log(\n      //   \"---persondata.personList and state.list---\",\n      //   persondata.personList,\n      //   state.list\n      // );\n\n      btnRestore(event);\n    }\n\n    let attributeList = ref([]);\n\n    const getTypeData = () => {\n      getTypeList().then(res => {\n        console.log('res:::', res);\n        attributeList.value = res.data.data;\n      });\n    };\n\n    function formatAttribute(row) {\n      let personType;\n      attributeList.value.forEach(element => {\n        if (element.type === row.type) {\n          personType = element.name;\n        }\n      });\n      return personType;\n    }\n\n    const getPersonData = () => {\n      getPersonList().then(res => {\n        console.log('res:::', res);\n        persondata.personList = res.data.data;\n      });\n    };\n\n    onMounted(() => {\n      getPersonData();\n      getTypeData();\n    });\n    const __returned__ = {\n      props,\n      drawerDetail,\n      dialogFormVisible,\n      isEdit,\n      rowData,\n      persondata,\n      test,\n      addPerson,\n      changeDialog,\n      changeIsEdit,\n      changeDrawer,\n      onDetails,\n      onDelete,\n      attributeList,\n      getTypeData,\n      formatAttribute,\n      getPersonData,\n      onMounted,\n      reactive,\n      ref,\n      watch,\n      AddDialog,\n      DetailDrawer,\n      btnRestore,\n      getPersonList,\n      getTypeList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","reactive","ref","watch","AddDialog","DetailDrawer","btnRestore","getPersonList","getTypeList","drawerDetail","dialogFormVisible","isEdit","rowData","persondata","personList","test","props","searchFrom","newValue","oldValue","isSearch","console","log","value","name","attribute","addPerson","row","event","changeDialog","changeIsEdit","changeDrawer","onDetails","onDelete","index","splice","attributeList","getTypeData","then","res","data","formatAttribute","personType","forEach","element","type","getPersonData"],"sources":["F:/hub-code/echarts_project/src/components/personList.vue"],"sourcesContent":["<template>\r\n  <div class=\"addbtn\">\r\n    <el-button\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      class=\"add-btn\"\r\n      @click=\"addPerson(false)\"\r\n      >新增</el-button\r\n    >\r\n  </div>\r\n  <!-- {{ test }}\r\n  <input type=\"text\" v-model=\"test\" />\r\n  <el-select v-model=\"test\" placeholder=\"请选择属性\">\r\n    <el-option\r\n      v-for=\"(item, index) in listTest\"\r\n      :key=\"index\"\r\n      :label=\"item.name\"\r\n      :value=\"item.type\"\r\n    />\r\n  </el-select> -->\r\n  <el-table :data=\"persondata.personList\" stripe style=\"width: 100%\">\r\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\r\n    <el-table-column\r\n      prop=\"type\"\r\n      label=\"类型\"\r\n      width=\"180\"\r\n      :formatter=\"formatAttribute\"\r\n    />\r\n    <el-table-column prop=\"\" label=\"操作\">\r\n      <template #default=\"scope\">\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"addPerson(true, scope.row)\"\r\n          >编辑</el-button\r\n        >\r\n        <el-button type=\"info\" size=\"small\" plain @click=\"onDetails\"\r\n          >查看</el-button\r\n        >\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          @click=\"onDelete(scope.row, scope.$index)\"\r\n          >删除</el-button\r\n        >\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <AddDialog\r\n    :dialogVisible=\"dialogFormVisible\"\r\n    @changeDialog=\"changeDialog\"\r\n    @changeIsEdit=\"changeIsEdit\"\r\n    :isEdit=\"isEdit\"\r\n    :rowData=\"rowData\"\r\n  ></AddDialog>\r\n  <DetailDrawer\r\n    :drawer=\"drawerDetail\"\r\n    @changeDrawer=\"changeDrawer\"\r\n  ></DetailDrawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\r\nimport AddDialog from \"@/components/addDialog.vue\";\r\nimport DetailDrawer from \"@/components/detailDrawer.vue\";\r\n// import { reactive } from '@vue/reactivity';\r\nimport btnRestore from \"@/utils/btnRestore\";\r\nimport { getPersonList, getTypeList } from '@/api/echarts.js'\r\n\r\nconst props = defineProps({\r\n  searchFrom: {\r\n    type: Object,\r\n    default: () => {},\r\n  },\r\n})\r\n\r\nlet drawerDetail = reactive({\r\n  drawerDetail: false,\r\n});\r\nlet dialogFormVisible = reactive({\r\n  dialogFormVisible: false,\r\n});\r\n\r\nlet isEdit = reactive({\r\n  isEdit: false,\r\n});\r\n\r\nlet rowData = ref(null);\r\n\r\nlet persondata = reactive({\r\n  personList: [],\r\n});\r\n\r\nlet test = ref(null);\r\n// const listTest = [\r\n//   {}\r\n// ]\r\n\r\n\r\nwatch(props.searchFrom, (newValue, oldValue) => {\r\n  if (newValue.isSearch) {\r\n    console.log(\"---searchFrom---\", newValue, oldValue);\r\n    // searchList(newValue);\r\n    test.value = props.searchFrom.name;\r\n    console.log(\"---watch.test---:\", test.value);\r\n  }\r\n  if (newValue.name == \"\" && newValue.attribute == \"\") {\r\n    // persondata.personList = state.list;\r\n  }\r\n  if (newValue || oldValue) return;\r\n});\r\n\r\nfunction addPerson(value, row) {\r\n  dialogFormVisible.dialogFormVisible = true;\r\n  isEdit.isEdit = value;\r\n  if (value && row) {\r\n    rowData.value = row;\r\n  } else {\r\n    // id.value = null\r\n  }\r\n  console.log(\"---addPerson.dialogFormVisible---\", dialogFormVisible);\r\n  btnRestore(event);\r\n}\r\n\r\n// function searchList(element) {\r\n//   persondata.personList = state.list.filter((item) => {\r\n//     // console.log('---item---',item)\r\n//     // console.log('---element---',element)\r\n//     if (element.name && element.attribute) {\r\n//       return element.name === item.name && element.attribute === item.type;\r\n//     } else {\r\n//       return element.name === item.name || element.attribute === item.type;\r\n//     }\r\n//   });\r\n// }\r\nfunction changeDialog(value) {\r\n  dialogFormVisible.dialogFormVisible = false;\r\n  persondata.personList = value[0]\r\n  // isEdit.isEdit = value;\r\n  //   id.value = null\r\n    console.log(\"---changeDialog.value---\", value);\r\n}\r\nfunction changeIsEdit(value) {\r\n  isEdit.isEdit = value;\r\n}\r\nfunction changeDrawer() {\r\n  drawerDetail.drawerDetail = false;\r\n}\r\nfunction onDetails() {\r\n  drawerDetail.drawerDetail = true;\r\n  console.log(\"---onDetails.drawerDetail---\", drawerDetail);\r\n  btnRestore(event);\r\n}\r\nfunction onDelete(row, index) {\r\n  console.log(\"---onDelete.row---\", row, index);\r\n  persondata.personList.splice(index, 1);\r\n  // store.commit(\"changeList\", persondata.personList);\r\n  // console.log(\r\n  //   \"---persondata.personList and state.list---\",\r\n  //   persondata.personList,\r\n  //   state.list\r\n  // );\r\n  btnRestore(event);\r\n}\r\nlet attributeList = ref([])\r\nconst getTypeData = () => {\r\n  getTypeList().then((res) => {\r\n    console.log('res:::', res);\r\n    attributeList.value = res.data.data\r\n  })\r\n}\r\nfunction formatAttribute(row) {\r\n  let personType;\r\n  attributeList.value.forEach((element) => {\r\n    if (element.type === row.type) {\r\n      personType = element.name;\r\n    }\r\n  });\r\n  return personType;\r\n}\r\n\r\nconst getPersonData = () => {\r\n  getPersonList().then((res) => {\r\n    console.log('res:::', res);\r\n    persondata.personList = res.data.data\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getPersonData()\r\n  getTypeData()\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.add-btn {\r\n  width: 65px;\r\n  letter-spacing: 3px;\r\n  position: relative;\r\n  left: 15px;\r\n  top: -10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}