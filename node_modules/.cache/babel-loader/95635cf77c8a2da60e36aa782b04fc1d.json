{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-44ce2c5c\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"left\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.menuList.menuList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"second_menu\", $setup.isIndex == index ? 'btn1' : '']),\n      key: index,\n      onClick: $event => $setup.toPage(item, index)\n    }, _toDisplayString(item.name), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_2);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;;uBAAXC,oBAUM,KAVN,cAUM,oBATJA,oBAQMC,SARN,EAQM,IARN,EAQMC,YALoBC,gBAASC,QAK7B,EALqC,CAAjCC,IAAiC,EAA3BC,KAA2B,KAAtB;yBAHrBN,oBAQM,KARN,EAQM;MAPJD,KAAK,mBAAC,aAAD,EACGI,kBAAWG,KAAX,GAAgB,MAAhB,GAAgB,EADnB,EAOD;MAJHC,GAAG,EAAED,KAIF;MAHHE,OAAK,YAAEL,cAAOE,IAAP,EAAaC,KAAb;IAGJ,CARN,mBAOKD,IAAI,CAACI,KAPV,EAOc;IAAA;IAPd,EAOcC,UAPd;GAQM,CARN;;EAAA,CASI,EAVN","names":["class","_createElementBlock","_Fragment","_renderList","$setup","menuList","item","index","key","onClick","name","_hoisted_2"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\views\\test3\\left\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"left\">\r\n    <div\r\n      class=\"second_menu\"\r\n      :class=\"isIndex == index ? 'btn1' : ''\"\r\n      v-for=\"(item, index) in menuList.menuList\"\r\n      :key=\"index\"\r\n      @click=\"toPage(item, index)\"\r\n    >\r\n      {{ item.name }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, watch, ref, reactive } from \"@vue/runtime-core\";\r\n// import router from '@/router/index'\r\n// import { list } from \"@/utils/enum\";\r\n// import useSecondMenu from \"@/utils/secondMenu\";\r\n\r\nexport default {\r\n  name: \"left-body\",\r\n  components: {},\r\n  props: {\r\n    navID: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n  },\r\n  setup(props,context) {\r\n    let menuList = reactive({\r\n      menuList: [],\r\n    });\r\n    let isIndex = ref(0);\r\n    let navId = ref(1);\r\n\r\n    const getSecondMenu = (id) => {\r\n      let menuList1 = [];\r\n      navId.value = Number(props.navID + \"1\");\r\n      // console.log(\"---id---111\", id, \"---navId---\", navId);\r\n      list.forEach((element) => {\r\n        // console.log(\"---element---\", element);\r\n        if (element.id == id) {\r\n          element.secondMenuList.forEach((item) => {\r\n            menuList1.push(item);\r\n          });\r\n          menuList.menuList = menuList1;\r\n        }\r\n      });\r\n      // console.log(\"---menuList---\", menuList);\r\n    };\r\n\r\n    onMounted(() => {\r\n      //   navId.value = Number(props.navID + \"1\");\r\n      // console.log(\"---props.navID1111---\", props, props.navID);\r\n      // getSecondMenu(props.navID);\r\n      // retPath(props.navID, navId);\r\n    });\r\n    watch(\r\n      () => props.navID,\r\n      (newValue, oldValue) => {\r\n        // navId.value = Number(props.navID + \"1\");\r\n        isIndex.value = 0;\r\n        // console.log(\"---navID---\", newValue, oldValue);\r\n        getSecondMenu(props.navID);\r\n        retPath(props.navID, navId);\r\n        if(newValue || oldValue) return\r\n      }\r\n    );\r\n    function toPage(item, index) {\r\n      isIndex.value = index;\r\n      navId.value = item.id;\r\n      // console.log(\"---item---\", item, isIndex, navId);\r\n      retPath(props.navID, navId);\r\n    }\r\n\r\n    function retPath(navID, id) {\r\n      // console.log(\"---id222---:\", navID, id, list);\r\n      list.forEach((element) => {\r\n        if (element.id === navID) {\r\n          element.secondMenuList.forEach((item) => {\r\n            if (item.id == id.value) {\r\n              let path = item.path;\r\n              context.emit('getPath',path)\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      menuList,\r\n      isIndex,\r\n      navId,\r\n      toPage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.left {\r\n  width: 230px;\r\n  height: 100%;\r\n  //   background-color: cadetblue;\r\n}\r\n.second_menu {\r\n  width: 100%;\r\n  height: 50px;\r\n  // background-color: burlywood;\r\n  margin: 5px 0px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n}\r\n.second_menu:hover {\r\n  background-color: rgba(100, 149, 237, 0.5);\r\n  color: #fff;\r\n}\r\n.btn1 {\r\n  background-color: #6495ED;\r\n  color: #fff;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}