{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"确定\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_dialog, {\n    modelValue: $setup.dialogFormVisible.dialogFormVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogFormVisible.dialogFormVisible = $event),\n    title: $props.isEdit.isEdit ? `编辑人物信息` : `新增人物信息`,\n    modal: \"\",\n    \"close-on-click-modal\": false,\n    \"before-close\": $setup.Cancel\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_1, [_createVNode(_component_el_button, {\n      onClick: $setup.Cancel\n    }, {\n      default: _withCtx(() => [_hoisted_2]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.Confirm\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 1\n      /* STABLE */\n\n    })])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.form,\n      \"label-suffix\": \":\",\n      rules: $setup.rules,\n      ref: \"formRef\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"姓名\",\n        \"label-width\": \"150px\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.name = $event),\n          placeholder: \"请输入姓名\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"属性\",\n        \"label-width\": \"150px\",\n        prop: \"type\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_select, {\n          modelValue: $setup.form.type,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.type = $event),\n          placeholder: \"请选择属性\",\n          style: {\n            \"width\": \"250px\"\n          }\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.attributeList, (item, index) => {\n            return _openBlock(), _createBlock(_component_el_option, {\n              key: index,\n              label: item.name,\n              value: item.type\n            }, null, 8\n            /* PROPS */\n            , [\"label\", \"value\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"title\"])]);\n}","map":{"version":3,"mappings":";;EAiCcA,KAAK,EAAC;;;iDACiB;;iDACgB;;;;;;;;;;;;;;;;;uBAlCnDC,oBAsCM,KAtCN,EAsCM,IAtCN,EAsCM,CArCJC,aAoCYC,oBApCZ,EAoCY;gBAnCDC,yBAAkBC,iBAmCjB;+DAnCDD,yBAAkBC,oBAAiBC,OAmClC;IAlCTC,KAAK,EAAEC,cAAOC,MAAP,GAAa,QAAb,GAAa,QAkCX;IAjCVC,KAAK,EAAL,EAiCU;IAhCT,wBAAsB,KAgCb;IA/BT,gBAAcN;EA+BL,CApCZ;IA8BaO,MAAM,WACf,MAGO,CAHPC,oBAGO,MAHP,cAGO,CAFLV,aAAyCW,oBAAzC,EAAyC;MAA7BC,OAAK,EAAEV;IAAsB,CAAzC,EAAyB;wBAAE,MAAE,aAAJ;;;;IAAA,CAAzB,CAEK,EADLF,aAAyDW,oBAAzD,EAAyD;MAA9CE,IAAI,EAAC,SAAyC;MAA9BD,OAAK,EAAEV;IAAuB,CAAzD;wBAA2C,MAAE;;;;KAA7C,CACK,CAHP,CAGO,CAJQ;sBAvBjB,MAsBU,CAtBVF,aAsBUc,kBAtBV,EAsBU;MAtBAC,KAAK,EAAEb,WAsBP;MAtBa,gBAAa,GAsB1B;MAtB+Bc,KAAK,EAAEd,YAsBtC;MAtB6Ce,GAAG,EAAC;IAsBjD,CAtBV;wBACE,MAMe,CANfjB,aAMekB,uBANf,EAMe;QANDC,KAAK,EAAC,IAML;QANU,eAAY,OAMtB;QAN8BC,IAAI,EAAC;MAMnC,CANf;0BACE,MAIE,CAJFpB,aAIEqB,mBAJF,EAIE;sBAHSnB,YAAKoB,IAGd;qEAHSpB,YAAKoB,OAAIlB,OAGlB;UAFAmB,WAAW,EAAC,OAEZ;UADAC,KAAoB,EAApB;YAAA;UAAA;QACA,CAJF;;QAAA,iBAIE;;;;OALJ,CAMe,EACfxB,aAaekB,uBAbf,EAae;QAbDC,KAAK,EAAC,IAaL;QAbU,eAAY,OAatB;QAb8BC,IAAI,EAAC;MAanC,CAbf;0BACE,MAWY,CAXZpB,aAWYyB,oBAXZ,EAWY;sBAVDvB,YAAKW,IAUJ;qEAVDX,YAAKW,OAAIT,OAUR;UATVmB,WAAW,EAAC,OASF;UARVC,KAAoB,EAApB;YAAA;UAAA;QAQU,CAXZ;4BAMI,MAAsC,oBADxCzB,oBAKE2B,SALF,EAKE,IALF,EAKEC,YAJwBzB,oBAIxB,EAJqC,CAA7B0B,IAA6B,EAAvBC,KAAuB,KAAlB;iCADrBC,aAKEC,oBALF,EAKE;cAHCC,GAAG,EAAEH,KAGN;cAFCV,KAAK,EAAES,IAAI,CAACN,IAEb;cADCW,KAAK,EAAEL,IAAI,CAACf;YACb,CALF;;YAAA;WAKE,CALF;;UAAA,CACwC;;;;SAN1C;;QAAA,iBAWY;;;;OAZd,CADe;;;;KAPjB;;IAAA,YAsBU;;;;GA7BZ;;EAAA,0BAqCI,CAtCN","names":["class","_createElementBlock","_createVNode","_component_el_dialog","$setup","dialogFormVisible","$event","title","$props","isEdit","modal","footer","_createElementVNode","_component_el_button","onClick","type","_component_el_form","model","rules","ref","_component_el_form_item","label","prop","_component_el_input","name","placeholder","style","_component_el_select","_Fragment","_renderList","item","index","_createBlock","_component_el_option","key","value"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\components\\addDialog.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"dialogFormVisible.dialogFormVisible\"\r\n      :title=\"isEdit.isEdit ? `编辑人物信息` : `新增人物信息`\"\r\n      modal\r\n      :close-on-click-modal=\"false\"\r\n      :before-close=\"Cancel\"\r\n    >\r\n      <el-form :model=\"form\" label-suffix=\":\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"姓名\" label-width=\"150px\" prop=\"name\">\r\n          <el-input\r\n            v-model=\"form.name\"\r\n            placeholder=\"请输入姓名\"\r\n            style=\"width: 250px\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"属性\" label-width=\"150px\" prop=\"type\">\r\n          <el-select\r\n            v-model=\"form.type\"\r\n            placeholder=\"请选择属性\"\r\n            style=\"width: 250px\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in attributeList\"\r\n              :key=\"index\"\r\n              :label=\"item.name\"\r\n              :value=\"item.type\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"Cancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"Confirm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\r\nimport { getTypeList, getPersonList } from '@/api/echarts.js'\r\n\r\nconst props = defineProps({\r\n  dialogVisible: {\r\n    type: Object,\r\n    default: () => { },\r\n  },\r\n  isEdit: {\r\n    type: Object,\r\n    default: () => { },\r\n  },\r\n  id: {\r\n    type: Object,\r\n    default: () => { },\r\n  },\r\n})\r\nconst emits = defineEmits(['changeDialog','changeIsEdit'])\r\n\r\n// let state = reactive(store.state.Original_god);\r\n// console.log(state.list);\r\nlet attributeList = ref([])\r\nlet persondata = ref([])\r\nconst rules = {\r\n  name: [{ required: true, message: \"请输入姓名\" }],\r\n  type: [{ required: true, message: \"请选择属性\" }],\r\n};\r\nconst formRef = ref(null);\r\n\r\nlet dialogFormVisible = reactive({\r\n  dialogFormVisible: false,\r\n});\r\nlet form = ref({\r\n    name: \"\",\r\n    type: \"\",\r\n});\r\n// console.log(\"---props---\", props.dialogVisible);\r\nwatch(props.dialogVisible, (newValue, oldValue) => {\r\n  // console.log(\"---dialogVisible---\", newValue, oldValue);\r\n  dialogFormVisible.dialogFormVisible = newValue.dialogFormVisible;\r\n  // console.log(\"---dialogFormVisible---\", dialogFormVisible);\r\n  if (newValue || oldValue) return;\r\n});\r\nwatch([() => props.id, props.isEdit], (newValue, oldValue) => {\r\n  console.log(\"---id and isEdit---\", newValue, oldValue);\r\n  console.log(\"---newValue1111111---\", newValue[1].isEdit, form.value);\r\n\r\n  if (newValue[1].isEdit) {\r\n    // getRowData(props.id);\r\n    console.log(\"---form---\", form.value);\r\n  } else {\r\n    form.value = { name: \"\", type: \"\" };\r\n    console.log(\"---newValue2222222---\", newValue[1].isEdit, form.value);\r\n  }\r\n  if (newValue || oldValue) return;\r\n});\r\nfunction Cancel() {\r\n  dialogFormVisible.dialogFormVisible = false;\r\n  if (!props.isEdit.isEdit) {\r\n    console.log(\"---!isEdit1111---\", !props.isEdit.isEdit);\r\n    form.value = { name: \"\", type: \"\" };\r\n\r\n    formRef.value.resetFields();\r\n    // form.form = {}\r\n  } else {\r\n    console.log(\"---!changeDialog11111---\", !props.isEdit.isEdit);\r\n    emits(\"changeIsEdit\",!props.isEdit.isEdit);\r\n  }\r\n  emits.emit(\"changeDialog\");\r\n}\r\nfunction Confirm() {\r\n  formRef.value.validate((valid) => {\r\n    if (valid) {\r\n      console.log(\"Confirm\", !props.isEdit.isEdit);\r\n      if (!props.isEdit.isEdit) {\r\n        addData();\r\n      } else {\r\n        // editData();\r\n      }\r\n    }\r\n  });\r\n}\r\nfunction addData() {\r\n  let personList = [...persondata.value];\r\n  console.log('---form and personList---',form.value,personList,personList.length);\r\n  personList.push({ id: personList.length + 1, ...form.value });\r\n  // console.log('---personList---',personList,personList.length);\r\n  // store.commit(\"changeList\", personList);\r\n  // console.log(\"---count---\", state.list);\r\n  dialogFormVisible.dialogFormVisible = false;\r\n  emits(\"changeDialog\", [personList,false]);\r\n  formRef.value.resetFields();\r\n}\r\n// function editData() {\r\n//   console.log(\"---id and from ---\", props.id, form.form);\r\n//   let personList = state.list;\r\n//   let index = personList.map((item) => item.id).indexOf(props.id);\r\n//   console.log(\r\n//     \"---form and personList---\",\r\n//     form,\r\n//     personList,\r\n//     props.id,\r\n//     index\r\n//   );\r\n//   personList.splice(index, 1, form.form);\r\n//   // console.log('---personList---',personList,personList.length);\r\n//   store.commit(\"changeList\", personList);\r\n//   // console.log(\"---count---\", state.list);\r\n//   dialogFormVisible.dialogFormVisible = false;\r\n//   emits.emit(\"changeDialog\", false);\r\n// }\r\n// function getRowData(id) {\r\n//   let personList = state.list;\r\n//   let formData = personList.filter((item) => {\r\n//     return item.id === id;\r\n//   });\r\n//   form.form = { ...formData[0] };\r\n//   console.log(\"---form111111---\", form);\r\n// }\r\n\r\n\r\nconst getTypeData = () => {\r\n  getTypeList().then((res) => {\r\n    console.log('res:::', res);\r\n    attributeList.value = res.data.data\r\n  })\r\n}\r\nconst getPersonData = () => {\r\n  getPersonList().then((res) => {\r\n    console.log('res:::', res);\r\n    persondata.value = res.data.data\r\n  })\r\n}\r\nonMounted(() => {\r\n  getTypeData()\r\n  getPersonData()\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}