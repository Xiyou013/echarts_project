{"ast":null,"code":"import { inject, nextTick, onMounted, reactive } from 'vue';\nexport default {\n  __name: 'vehicleEchartsTwo',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // import dayjs from 'dayjs'\n\n    let echarts = inject('ec'); // const colorList = ['#F1B164', '#05D2FC']\n\n    let vehicle2 = 'vehicle2';\n    let myChart; // const changeSize = (val) => {\n    //     let nowClientWidth =\n    //         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    //     // console.log('nowClientWidth', nowClientWidth)\n    //     return val * (nowClientWidth / 1920)\n    // }\n    // const nowSize = (val) => {\n    //     //   console.log(val instanceof Array)\n    //     let data = ''\n    //     let arr = []\n    //     if (typeof val === 'object') {\n    //         if (val instanceof Array) {\n    //             val.forEach((item) => {\n    //                 let size = changeSize(item)\n    //                 arr.push(size)\n    //             })\n    //             data = arr\n    //         }\n    //     } else {\n    //         data = changeSize(val)\n    //     }\n    //     //   console.log('data::', data)\n    //     return data\n    // }\n    // const getListData = () => {\n    // data.forEach((item, index) => {\n    //     item.lineStyle = {\n    //         color: colorList[index],\n    //         width: 2\n    //     }\n    //     item.yAxisIndex = index\n    // })\n    // }\n    // let time = ref([\n    //     {\n    //         name: 'Direct',\n    //         type: 'bar',\n    //         emphasis: {\n    //             focus: 'series'\n    //         },\n    //         data: [\n    //             320, 332, 301, 334, 390, 330, 320\n    //         ]\n    //     },\n    //     {\n    //         name: 'Email',\n    //         type: 'bar',\n    //         stack: 'Ad',\n    //         emphasis: {\n    //             focus: 'series'\n    //         },\n    //         data: [\n    //             120, 132, 101, 134, 90, 230, 210\n    //         ]\n    //     },\n    //     {\n    //         name: 'Union Ads',\n    //         type: 'bar',\n    //         stack: 'Ad',\n    //         emphasis: {\n    //             focus: 'series'\n    //         },\n    //         data: [\n    //             220, 182, 191, 234, 290, 330, 310\n    //         ]\n    //     },\n    //     {\n    //         name: 'Video Ads',\n    //         type: 'bar',\n    //         stack: 'Ad',\n    //         emphasis: {\n    //             focus: 'series'\n    //         },\n    //         data: [\n    //             150, 232, 201, 154, 190, 330, 410\n    //         ]\n    //     },\n    // ])\n\n    const data = reactive({\n      option: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {},\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        }],\n        yAxis: [{\n          type: 'value'\n        }],\n        series: [{\n          name: 'Direct',\n          type: 'bar',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [320, 332, 301, 334, 390, 330, 320]\n        }, {\n          name: 'Email',\n          type: 'bar',\n          stack: 'Ad',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: 'Union Ads',\n          type: 'bar',\n          stack: 'Ad',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [220, 182, 191, 234, 290, 330, 310]\n        }, {\n          name: 'Video Ads',\n          type: 'bar',\n          stack: 'Ad',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [150, 232, 201, 154, 190, 330, 410]\n        }, {\n          name: 'Search Engine',\n          type: 'bar',\n          data: [862, 1018, 964, 1026, 1679, 1600, 1570],\n          emphasis: {\n            focus: 'series'\n          },\n          markLine: {\n            lineStyle: {\n              type: 'dashed'\n            },\n            data: [[{\n              type: 'min'\n            }, {\n              type: 'max'\n            }]]\n          }\n        }, {\n          name: 'Baidu',\n          type: 'bar',\n          barWidth: 5,\n          stack: 'Search Engine',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [620, 732, 701, 734, 1090, 1130, 1120]\n        }, {\n          name: 'Google',\n          type: 'bar',\n          stack: 'Search Engine',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [120, 132, 101, 134, 290, 230, 220]\n        }, {\n          name: 'Bing',\n          type: 'bar',\n          stack: 'Search Engine',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [60, 72, 71, 74, 190, 130, 110]\n        }, {\n          name: 'Others',\n          type: 'bar',\n          stack: 'Search Engine',\n          emphasis: {\n            focus: 'series'\n          },\n          data: [62, 82, 91, 84, 109, 110, 120]\n        }]\n      }\n    }); // 初始化折线图\n\n    const initChart = () => {\n      // setTimeout(() => {\n      console.log('12132123'); // //检测是否已经存在echarts实例，如果不存在，则不再去初始化\n      // let myChart = echarts.getInstanceByDom(\n      //     document.getElementById('vehicle2')\n      // );\n      // if (myChart == null) {\n      //     console.log('123');\n      //     myChart = echarts.init(document.getElementById('vehicle2'));\n      //     myChart.setOption(data.options);\n      // }\n\n      myChart = echarts.init(document.getElementById(vehicle2));\n      myChart.setOption(data.options); // }, 2000)\n    }; // 监听更改折线图y轴有关数据\n    // const changeyAxis = () => {\n    //     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[0].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[1].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\n    //     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\n    //     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\n    //     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\n    //     data.options.yAxis[0].nameGap = nowSize(20)\n    //     data.options.yAxis[1].nameGap = nowSize(20)\n    //     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\n    //     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\n    // }\n    // 监听更改折线图x轴有关数据\n    // const changexAxis = () => {\n    //     data.options.xAxis.axisLabel.fontSize = nowSize(17)\n    //     data.options.xAxis.axisLabel.margin = nowSize(15)\n    //     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\n    // }\n\n\n    onMounted(() => {\n      // getListData(time.value)\n      nextTick(() => {\n        initChart();\n      }); // initChart()\n    });\n\n    window.onresize = ec => {\n      // 监听窗口大小变化\n      // myChart.resize() // 自适应大小变化\n      console.log('22222222'); // changeyAxis()\n      // changexAxis()\n      // myChart.setOption(data.options)\n\n      myChart.resize(); // 自适应大小变化\n\n      if (ec) return;\n    };\n\n    const __returned__ = {\n      echarts,\n      vehicle2,\n      myChart,\n      data,\n      initChart,\n      inject,\n      nextTick,\n      onMounted,\n      reactive\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["inject","nextTick","onMounted","reactive","echarts","vehicle2","myChart","data","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","name","emphasis","focus","stack","markLine","lineStyle","barWidth","initChart","console","log","init","document","getElementById","setOption","options","window","onresize","ec","resize"],"sources":["F:/hub-code/echarts_project/src/views/test2/components/vehicleEchartsTwo.vue"],"sourcesContent":["<template>\r\n    <div ref=\"vehicle1\" :id=\"vehicle2\"></div>\r\n</template>\r\n\r\n<script setup>\r\n// import dayjs from 'dayjs'\r\nimport { inject, nextTick, onMounted, reactive } from 'vue'\r\n\r\nlet echarts = inject('ec')\r\n// const colorList = ['#F1B164', '#05D2FC']\r\nlet vehicle2 = 'vehicle2'\r\nlet myChart\r\n\r\n// const changeSize = (val) => {\r\n//     let nowClientWidth =\r\n//         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n//     // console.log('nowClientWidth', nowClientWidth)\r\n//     return val * (nowClientWidth / 1920)\r\n// }\r\n\r\n// const nowSize = (val) => {\r\n//     //   console.log(val instanceof Array)\r\n//     let data = ''\r\n//     let arr = []\r\n//     if (typeof val === 'object') {\r\n//         if (val instanceof Array) {\r\n//             val.forEach((item) => {\r\n//                 let size = changeSize(item)\r\n//                 arr.push(size)\r\n//             })\r\n//             data = arr\r\n//         }\r\n//     } else {\r\n//         data = changeSize(val)\r\n//     }\r\n//     //   console.log('data::', data)\r\n//     return data\r\n// }\r\n\r\n// const getListData = () => {\r\n// data.forEach((item, index) => {\r\n//     item.lineStyle = {\r\n//         color: colorList[index],\r\n//         width: 2\r\n//     }\r\n//     item.yAxisIndex = index\r\n// })\r\n\r\n// }\r\n\r\n// let time = ref([\r\n//     {\r\n//         name: 'Direct',\r\n//         type: 'bar',\r\n//         emphasis: {\r\n//             focus: 'series'\r\n//         },\r\n//         data: [\r\n//             320, 332, 301, 334, 390, 330, 320\r\n//         ]\r\n//     },\r\n//     {\r\n//         name: 'Email',\r\n//         type: 'bar',\r\n//         stack: 'Ad',\r\n//         emphasis: {\r\n//             focus: 'series'\r\n//         },\r\n//         data: [\r\n//             120, 132, 101, 134, 90, 230, 210\r\n//         ]\r\n//     },\r\n//     {\r\n//         name: 'Union Ads',\r\n//         type: 'bar',\r\n//         stack: 'Ad',\r\n//         emphasis: {\r\n//             focus: 'series'\r\n//         },\r\n//         data: [\r\n//             220, 182, 191, 234, 290, 330, 310\r\n//         ]\r\n//     },\r\n//     {\r\n//         name: 'Video Ads',\r\n//         type: 'bar',\r\n//         stack: 'Ad',\r\n//         emphasis: {\r\n//             focus: 'series'\r\n//         },\r\n//         data: [\r\n//             150, 232, 201, 154, 190, 330, 410\r\n//         ]\r\n//     },\r\n// ])\r\n\r\nconst data = reactive({\r\n    option: {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n                type: 'shadow'\r\n            }\r\n        },\r\n        legend: {},\r\n        grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        xAxis: [\r\n            {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            }\r\n        ],\r\n        yAxis: [\r\n            {\r\n                type: 'value'\r\n            }\r\n        ],\r\n        series: [\r\n            {\r\n                name: 'Direct',\r\n                type: 'bar',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [320, 332, 301, 334, 390, 330, 320]\r\n            },\r\n            {\r\n                name: 'Email',\r\n                type: 'bar',\r\n                stack: 'Ad',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [120, 132, 101, 134, 90, 230, 210]\r\n            },\r\n            {\r\n                name: 'Union Ads',\r\n                type: 'bar',\r\n                stack: 'Ad',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [220, 182, 191, 234, 290, 330, 310]\r\n            },\r\n            {\r\n                name: 'Video Ads',\r\n                type: 'bar',\r\n                stack: 'Ad',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [150, 232, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n                name: 'Search Engine',\r\n                type: 'bar',\r\n                data: [862, 1018, 964, 1026, 1679, 1600, 1570],\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                markLine: {\r\n                    lineStyle: {\r\n                        type: 'dashed'\r\n                    },\r\n                    data: [[{ type: 'min' }, { type: 'max' }]]\r\n                }\r\n            },\r\n            {\r\n                name: 'Baidu',\r\n                type: 'bar',\r\n                barWidth: 5,\r\n                stack: 'Search Engine',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [620, 732, 701, 734, 1090, 1130, 1120]\r\n            },\r\n            {\r\n                name: 'Google',\r\n                type: 'bar',\r\n                stack: 'Search Engine',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [120, 132, 101, 134, 290, 230, 220]\r\n            },\r\n            {\r\n                name: 'Bing',\r\n                type: 'bar',\r\n                stack: 'Search Engine',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [60, 72, 71, 74, 190, 130, 110]\r\n            },\r\n            {\r\n                name: 'Others',\r\n                type: 'bar',\r\n                stack: 'Search Engine',\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [62, 82, 91, 84, 109, 110, 120]\r\n            }\r\n        ]\r\n    }\r\n})\r\n\r\n// 初始化折线图\r\nconst initChart = () => {\r\n    // setTimeout(() => {\r\n    console.log('12132123');\r\n    // //检测是否已经存在echarts实例，如果不存在，则不再去初始化\r\n    // let myChart = echarts.getInstanceByDom(\r\n    //     document.getElementById('vehicle2')\r\n    // );\r\n    // if (myChart == null) {\r\n    //     console.log('123');\r\n    //     myChart = echarts.init(document.getElementById('vehicle2'));\r\n    //     myChart.setOption(data.options);\r\n    // }\r\n\r\n    myChart = echarts.init(document.getElementById(vehicle2))\r\n    myChart.setOption(data.options)\r\n    // }, 2000)\r\n\r\n}\r\n// 监听更改折线图y轴有关数据\r\n// const changeyAxis = () => {\r\n//     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[1].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\r\n//     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\r\n//     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\r\n//     data.options.yAxis[0].nameGap = nowSize(20)\r\n//     data.options.yAxis[1].nameGap = nowSize(20)\r\n//     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\r\n//     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\r\n// }\r\n// 监听更改折线图x轴有关数据\r\n// const changexAxis = () => {\r\n//     data.options.xAxis.axisLabel.fontSize = nowSize(17)\r\n//     data.options.xAxis.axisLabel.margin = nowSize(15)\r\n//     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\r\n// }\r\n\r\nonMounted(() => {\r\n    // getListData(time.value)\r\n    nextTick(() => {\r\n        initChart()\r\n    })\r\n    // initChart()\r\n})\r\nwindow.onresize = (ec) => {\r\n    // 监听窗口大小变化\r\n    // myChart.resize() // 自适应大小变化\r\n    console.log('22222222')\r\n    // changeyAxis()\r\n    // changexAxis()\r\n    // myChart.setOption(data.options)\r\n    myChart.resize() // 自适应大小变化\r\n    if (ec) return\r\n}\r\n</script>\r\n\r\n<style>\r\n.vehicle_echarts {\r\n    width: 92vw;\r\n    height: 28vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n.vehicle_echarts1 {\r\n    width: 65vw;\r\n    height: 35vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n#vehicle2 {\r\n    width: 90%;\r\n    /* height: 100%; */\r\n    height: inherit;\r\n    margin-left: 5%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}