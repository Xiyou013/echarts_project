{"ast":null,"code":"import { computed } from 'vue';\nimport dayjs from 'dayjs';\nimport localeData from 'dayjs/plugin/localeData.js';\nimport '../../../hooks/index.mjs';\nimport '../../time-picker/index.mjs';\nimport '../../../constants/index.mjs';\nimport { getPrevMonthLastDays, getMonthDays, toNestedArr } from './date-table.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { rangeArr } from '../../time-picker/src/utils.mjs';\nimport { WEEK_DAYS } from '../../../constants/date.mjs';\n\nconst useDateTable = (props, emit) => {\n  dayjs.extend(localeData);\n  const firstDayOfWeek = dayjs.localeData().firstDayOfWeek();\n  const {\n    t,\n    lang\n  } = useLocale();\n  const now = dayjs().locale(lang.value);\n  const isInRange = computed(() => !!props.range && !!props.range.length);\n  const rows = computed(() => {\n    let days = [];\n\n    if (isInRange.value) {\n      const [start, end] = props.range;\n      const currentMonthRange = rangeArr(end.date() - start.date() + 1).map(index => ({\n        text: start.date() + index,\n        type: \"current\"\n      }));\n      let remaining = currentMonthRange.length % 7;\n      remaining = remaining === 0 ? 0 : 7 - remaining;\n      const nextMonthRange = rangeArr(remaining).map((_, index) => ({\n        text: index + 1,\n        type: \"next\"\n      }));\n      days = currentMonthRange.concat(nextMonthRange);\n    } else {\n      const firstDay = props.date.startOf(\"month\").day();\n      const prevMonthDays = getPrevMonthLastDays(props.date, (firstDay - firstDayOfWeek + 7) % 7).map(day => ({\n        text: day,\n        type: \"prev\"\n      }));\n      const currentMonthDays = getMonthDays(props.date).map(day => ({\n        text: day,\n        type: \"current\"\n      }));\n      days = [...prevMonthDays, ...currentMonthDays];\n      const remaining = 7 - (days.length % 7 || 7);\n      const nextMonthDays = rangeArr(remaining).map((_, index) => ({\n        text: index + 1,\n        type: \"next\"\n      }));\n      days = days.concat(nextMonthDays);\n    }\n\n    return toNestedArr(days);\n  });\n  const weekDays = computed(() => {\n    const start = firstDayOfWeek;\n\n    if (start === 0) {\n      return WEEK_DAYS.map(_ => t(`el.datepicker.weeks.${_}`));\n    } else {\n      return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start)).map(_ => t(`el.datepicker.weeks.${_}`));\n    }\n  });\n\n  const getFormattedDate = (day, type) => {\n    switch (type) {\n      case \"prev\":\n        return props.date.startOf(\"month\").subtract(1, \"month\").date(day);\n\n      case \"next\":\n        return props.date.startOf(\"month\").add(1, \"month\").date(day);\n\n      case \"current\":\n        return props.date.date(day);\n    }\n  };\n\n  const handlePickDay = ({\n    text,\n    type\n  }) => {\n    const date = getFormattedDate(text, type);\n    emit(\"pick\", date);\n  };\n\n  const getSlotData = ({\n    text,\n    type\n  }) => {\n    const day = getFormattedDate(text, type);\n    return {\n      isSelected: day.isSame(props.selectedDay),\n      type: `${type}-month`,\n      day: day.format(\"YYYY-MM-DD\"),\n      date: day.toDate()\n    };\n  };\n\n  return {\n    now,\n    isInRange,\n    rows,\n    weekDays,\n    getFormattedDate,\n    handlePickDay,\n    getSlotData\n  };\n};\n\nexport { useDateTable };","map":{"version":3,"mappings":"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","names":["useDateTable","props","emit","dayjs","extend","localeData","firstDayOfWeek","t","lang","useLocale","now","locale","value","isInRange","computed","range","length","rows","days","start","end","currentMonthRange","rangeArr","date","map","index","text","type","remaining","nextMonthRange","_","concat","firstDay","startOf","day","prevMonthDays","getPrevMonthLastDays","currentMonthDays","getMonthDays","nextMonthDays","toNestedArr","weekDays","WEEK_DAYS","slice","getFormattedDate","subtract","add","handlePickDay","getSlotData","isSelected","isSame","selectedDay","format","toDate"],"sources":["../../../../../../packages/components/calendar/src/use-date-table.ts"],"sourcesContent":["import { computed } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData.js'\nimport { useLocale } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { WEEK_DAYS } from '@element-plus/constants'\nimport { getMonthDays, getPrevMonthLastDays, toNestedArr } from './date-table'\n\nimport type { SetupContext } from 'vue'\nimport type { Dayjs } from 'dayjs'\nimport type {\n  CalendarDateCell,\n  CalendarDateCellType,\n  DateTableEmits,\n  DateTableProps,\n} from './date-table'\n\nexport const useDateTable = (\n  props: DateTableProps,\n  emit: SetupContext<DateTableEmits>['emit']\n) => {\n  dayjs.extend(localeData)\n  // https://day.js.org/docs/en/i18n/locale-data\n  const firstDayOfWeek: number = dayjs.localeData().firstDayOfWeek()\n\n  const { t, lang } = useLocale()\n  const now = dayjs().locale(lang.value)\n\n  const isInRange = computed(() => !!props.range && !!props.range.length)\n\n  const rows = computed(() => {\n    let days: CalendarDateCell[] = []\n    if (isInRange.value) {\n      const [start, end] = props.range!\n      const currentMonthRange: CalendarDateCell[] = rangeArr(\n        end.date() - start.date() + 1\n      ).map((index) => ({\n        text: start.date() + index,\n        type: 'current',\n      }))\n\n      let remaining = currentMonthRange.length % 7\n      remaining = remaining === 0 ? 0 : 7 - remaining\n      const nextMonthRange: CalendarDateCell[] = rangeArr(remaining).map(\n        (_, index) => ({\n          text: index + 1,\n          type: 'next',\n        })\n      )\n      days = currentMonthRange.concat(nextMonthRange)\n    } else {\n      const firstDay = props.date.startOf('month').day()\n      const prevMonthDays: CalendarDateCell[] = getPrevMonthLastDays(\n        props.date,\n        (firstDay - firstDayOfWeek + 7) % 7\n      ).map((day) => ({\n        text: day,\n        type: 'prev',\n      }))\n      const currentMonthDays: CalendarDateCell[] = getMonthDays(props.date).map(\n        (day) => ({\n          text: day,\n          type: 'current',\n        })\n      )\n      days = [...prevMonthDays, ...currentMonthDays]\n      const remaining = 7 - (days.length % 7 || 7)\n      const nextMonthDays: CalendarDateCell[] = rangeArr(remaining).map(\n        (_, index) => ({\n          text: index + 1,\n          type: 'next',\n        })\n      )\n      days = days.concat(nextMonthDays)\n    }\n    return toNestedArr(days)\n  })\n\n  const weekDays = computed(() => {\n    const start = firstDayOfWeek\n    if (start === 0) {\n      return WEEK_DAYS.map((_) => t(`el.datepicker.weeks.${_}`))\n    } else {\n      return WEEK_DAYS.slice(start)\n        .concat(WEEK_DAYS.slice(0, start))\n        .map((_) => t(`el.datepicker.weeks.${_}`))\n    }\n  })\n\n  const getFormattedDate = (day: number, type: CalendarDateCellType): Dayjs => {\n    switch (type) {\n      case 'prev':\n        return props.date.startOf('month').subtract(1, 'month').date(day)\n      case 'next':\n        return props.date.startOf('month').add(1, 'month').date(day)\n      case 'current':\n        return props.date.date(day)\n    }\n  }\n\n  const handlePickDay = ({ text, type }: CalendarDateCell) => {\n    const date = getFormattedDate(text, type)\n    emit('pick', date)\n  }\n\n  const getSlotData = ({ text, type }: CalendarDateCell) => {\n    const day = getFormattedDate(text, type)\n    return {\n      isSelected: day.isSame(props.selectedDay),\n      type: `${type}-month`,\n      day: day.format('YYYY-MM-DD'),\n      date: day.toDate(),\n    }\n  }\n\n  return {\n    now,\n    isInRange,\n    rows,\n    weekDays,\n    getFormattedDate,\n    handlePickDay,\n    getSlotData,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}