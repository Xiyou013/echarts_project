{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-20c55a23\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"addbtn\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"新增\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"编辑\");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"查看\");\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"small\",\n    class: \"add-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.addPerson(false))\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n    /* STABLE */\n\n  })]), _createCommentVNode(\" {{ test }}\\r\\n  <input type=\\\"text\\\" v-model=\\\"test\\\" />\\r\\n  <el-select v-model=\\\"test\\\" placeholder=\\\"请选择属性\\\">\\r\\n    <el-option\\r\\n      v-for=\\\"(item, index) in listTest\\\"\\r\\n      :key=\\\"index\\\"\\r\\n      :label=\\\"item.name\\\"\\r\\n      :value=\\\"item.type\\\"\\r\\n    />\\r\\n  </el-select> \"), _createVNode(_component_el_table, {\n    data: $setup.persondata.personList,\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"姓名\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"type\",\n      label: \"类型\",\n      width: \"180\",\n      formatter: $setup.formatAttribute\n    }), _createVNode(_component_el_table_column, {\n      prop: \"\",\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.addPerson(true, scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"]), _createVNode(_component_el_button, {\n        type: \"info\",\n        size: \"small\",\n        plain: \"\",\n        onClick: $setup.onDetails\n      }, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        onClick: $event => $setup.onDelete(scope.row, scope.$index)\n      }, {\n        default: _withCtx(() => [_hoisted_5]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"]), _createVNode($setup[\"AddDialog\"], {\n    dialogVisible: $setup.dialogFormVisible,\n    onChangeDialog: $setup.changeDialog,\n    onChangeIsEdit: $setup.changeIsEdit,\n    isEdit: $setup.isEdit,\n    id: $setup.id\n  }, null, 8\n  /* PROPS */\n  , [\"dialogVisible\", \"isEdit\", \"id\"]), _createVNode($setup[\"DetailDrawer\"], {\n    drawer: $setup.drawerDetail,\n    onChangeDrawer: $setup.changeDrawer\n  }, null, 8\n  /* PROPS */\n  , [\"drawer\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;iDAMN;;iDA2BI;;iDAGA;;iDAMA;;;;;;;;;6DA1CTC,oBAQM,KARN,cAQM,CAPJC,aAMCC,oBAND,EAMC;IALCC,IAAI,EAAC,SAKN;IAJCC,IAAI,EAAC,OAIN;IAHCL,KAAK,EAAC,SAGP;IAFEM,OAAK,sCAAEC,iBAAS,KAAT,CAAF;EAEP,CAND;sBAKG,MAAE;;;;GALL,CAOI,CARN,GASAC,0TAUAN,aA2BWO,mBA3BX,EA2BW;IA3BAC,IAAI,EAAEH,kBAAWI,UA2BjB;IA3B6BC,MAAM,EAAN,EA2B7B;IA3BoCC,KAAmB,EAAnB;MAAA;IAAA;EA2BpC,CA3BX;sBACE,MAAsD,CAAtDX,aAAsDY,0BAAtD,EAAsD;MAArCC,IAAI,EAAC,MAAgC;MAAzBC,KAAK,EAAC,IAAmB;MAAdC,KAAK,EAAC;IAAQ,CAAtD,CAAsD,EACtDf,aAKEY,0BALF,EAKE;MAJAC,IAAI,EAAC,MAIL;MAHAC,KAAK,EAAC,IAGN;MAFAC,KAAK,EAAC,KAEN;MADCC,SAAS,EAAEX;IACZ,CALF,CADsD,EAOtDL,aAkBkBY,0BAlBlB,EAkBkB;MAlBDC,IAAI,EAAC,EAkBJ;MAlBOC,KAAK,EAAC;IAkBb,CAlBlB;MACaG,OAAO,WAAEC,KAClB,IADuB,CACvBlB,aAKCC,oBALD,EAKC;QAJCC,IAAI,EAAC,SAIN;QAHCC,IAAI,EAAC,OAGN;QAFEC,OAAK,YAAEC,iBAAS,IAAT,EAAgBa,KAAK,CAACC,GAAtB;MAET,CALD;0BAIG,MAAE;;;;OAJL;;MAAA,cADuB,EAOvBnB,aAECC,oBAFD,EAEC;QAFUC,IAAI,EAAC,MAEf;QAFsBC,IAAI,EAAC,OAE3B;QAFmCiB,KAAK,EAAL,EAEnC;QAF0ChB,OAAK,EAAEC;MAEjD,CAFD;0BACG,MAAE;;;;OADL,CAPuB,EAUvBL,aAKCC,oBALD,EAKC;QAJCC,IAAI,EAAC,QAIN;QAHCC,IAAI,EAAC,OAGN;QAFEC,OAAK,YAAEC,gBAASa,KAAK,CAACC,GAAf,EAAoBD,KAAK,CAACG,MAA1B;MAET,CALD;0BAIG,MAAE;;;;OAJL;;MAAA,cAVuB,CAAP;;;;KADpB,CAPsD;;;;GADxD;;EAAA,aA4BArB,aAMaK,mBANb,EAMa;IALViB,aAAa,EAAEjB,wBAKL;IAJVkB,cAAY,EAAElB,mBAIJ;IAHVmB,cAAY,EAAEnB,mBAGJ;IAFVoB,MAAM,EAAEpB,aAEE;IADVqB,EAAE,EAAErB;EACM,CANb;;EAAA,sCAOAL,aAGgBK,sBAHhB,EAGgB;IAFbsB,MAAM,EAAEtB,mBAEK;IADbuB,cAAY,EAAEvB;EACD,CAHhB;;EAAA","names":["class","_createElementVNode","_createVNode","_component_el_button","type","size","onClick","$setup","_createCommentVNode","_component_el_table","data","personList","stripe","style","_component_el_table_column","prop","label","width","formatter","default","scope","row","plain","$index","dialogVisible","onChangeDialog","onChangeIsEdit","isEdit","id","drawer","onChangeDrawer"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\components\\personList.vue"],"sourcesContent":["<template>\r\n  <div class=\"addbtn\">\r\n    <el-button\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      class=\"add-btn\"\r\n      @click=\"addPerson(false)\"\r\n      >新增</el-button\r\n    >\r\n  </div>\r\n  <!-- {{ test }}\r\n  <input type=\"text\" v-model=\"test\" />\r\n  <el-select v-model=\"test\" placeholder=\"请选择属性\">\r\n    <el-option\r\n      v-for=\"(item, index) in listTest\"\r\n      :key=\"index\"\r\n      :label=\"item.name\"\r\n      :value=\"item.type\"\r\n    />\r\n  </el-select> -->\r\n  <el-table :data=\"persondata.personList\" stripe style=\"width: 100%\">\r\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\r\n    <el-table-column\r\n      prop=\"type\"\r\n      label=\"类型\"\r\n      width=\"180\"\r\n      :formatter=\"formatAttribute\"\r\n    />\r\n    <el-table-column prop=\"\" label=\"操作\">\r\n      <template #default=\"scope\">\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"addPerson(true, scope.row)\"\r\n          >编辑</el-button\r\n        >\r\n        <el-button type=\"info\" size=\"small\" plain @click=\"onDetails\"\r\n          >查看</el-button\r\n        >\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          @click=\"onDelete(scope.row, scope.$index)\"\r\n          >删除</el-button\r\n        >\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <AddDialog\r\n    :dialogVisible=\"dialogFormVisible\"\r\n    @changeDialog=\"changeDialog\"\r\n    @changeIsEdit=\"changeIsEdit\"\r\n    :isEdit=\"isEdit\"\r\n    :id=\"id\"\r\n  ></AddDialog>\r\n  <DetailDrawer\r\n    :drawer=\"drawerDetail\"\r\n    @changeDrawer=\"changeDrawer\"\r\n  ></DetailDrawer>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\r\nimport AddDialog from \"@/components/addDialog.vue\";\r\nimport DetailDrawer from \"@/components/detailDrawer.vue\";\r\n// import { reactive } from '@vue/reactivity';\r\nimport btnRestore from \"@/utils/btnRestore\";\r\nimport { getPersonList, getTypeList } from '@/api/echarts.js'\r\n\r\nconst props = defineProps({\r\n  searchFrom: {\r\n    type: Object,\r\n    default: () => {},\r\n  },\r\n})\r\n\r\nlet drawerDetail = reactive({\r\n  drawerDetail: false,\r\n});\r\nlet dialogFormVisible = reactive({\r\n  dialogFormVisible: false,\r\n});\r\n\r\nlet isEdit = reactive({\r\n  isEdit: false,\r\n});\r\n\r\nlet id = ref(null);\r\n\r\nlet persondata = reactive({\r\n  personList: [],\r\n});\r\n\r\nlet test = ref(null);\r\n// const listTest = [\r\n//   {}\r\n// ]\r\n\r\n\r\nwatch(props.searchFrom, (newValue, oldValue) => {\r\n  if (newValue.isSearch) {\r\n    console.log(\"---searchFrom---\", newValue, oldValue);\r\n    // searchList(newValue);\r\n    test.value = props.searchFrom.name;\r\n    console.log(\"---watch.test---:\", test.value);\r\n  }\r\n  if (newValue.name == \"\" && newValue.attribute == \"\") {\r\n    // persondata.personList = state.list;\r\n  }\r\n  if (newValue || oldValue) return;\r\n});\r\n\r\nfunction addPerson(value, row) {\r\n  dialogFormVisible.dialogFormVisible = true;\r\n  isEdit.isEdit = value;\r\n  if (value && row) {\r\n    id.value = row.id;\r\n  } else {\r\n    // id.value = null\r\n  }\r\n  console.log(\"---addPerson.dialogFormVisible---\", dialogFormVisible);\r\n  btnRestore(event);\r\n}\r\n\r\n// function searchList(element) {\r\n//   persondata.personList = state.list.filter((item) => {\r\n//     // console.log('---item---',item)\r\n//     // console.log('---element---',element)\r\n//     if (element.name && element.attribute) {\r\n//       return element.name === item.name && element.attribute === item.type;\r\n//     } else {\r\n//       return element.name === item.name || element.attribute === item.type;\r\n//     }\r\n//   });\r\n// }\r\nfunction changeDialog(value) {\r\n  dialogFormVisible.dialogFormVisible = value[1];\r\n  persondata.personList = value[0]\r\n  // isEdit.isEdit = value;\r\n  //   id.value = null\r\n    console.log(\"---changeDialog.value---\", value);\r\n}\r\nfunction changeIsEdit(value) {\r\n  isEdit.isEdit = value;\r\n}\r\nfunction changeDrawer() {\r\n  drawerDetail.drawerDetail = false;\r\n}\r\nfunction onDetails() {\r\n  drawerDetail.drawerDetail = true;\r\n  console.log(\"---onDetails.drawerDetail---\", drawerDetail);\r\n  btnRestore(event);\r\n}\r\nfunction onDelete(row, index) {\r\n  console.log(\"---onDelete.row---\", row, index);\r\n  persondata.personList.splice(index, 1);\r\n  // store.commit(\"changeList\", persondata.personList);\r\n  // console.log(\r\n  //   \"---persondata.personList and state.list---\",\r\n  //   persondata.personList,\r\n  //   state.list\r\n  // );\r\n  btnRestore(event);\r\n}\r\nlet attributeList = ref([])\r\nconst getTypeData = () => {\r\n  getTypeList().then((res) => {\r\n    console.log('res:::', res);\r\n    attributeList.value = res.data.data\r\n  })\r\n}\r\nfunction formatAttribute(row) {\r\n  let personType;\r\n  attributeList.value.forEach((element) => {\r\n    if (element.type === row.type) {\r\n      personType = element.name;\r\n    }\r\n  });\r\n  return personType;\r\n}\r\n\r\nconst getPersonData = () => {\r\n  getPersonList().then((res) => {\r\n    console.log('res:::', res);\r\n    persondata.personList = res.data.data\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getPersonData()\r\n  getTypeData()\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.add-btn {\r\n  width: 65px;\r\n  letter-spacing: 3px;\r\n  position: relative;\r\n  left: 15px;\r\n  top: -10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}