{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Hi there!\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_drawer = _resolveComponent(\"el-drawer\");\n\n  return _openBlock(), _createBlock(_component_el_drawer, {\n    modelValue: _ctx.drawerDetail,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.drawerDetail = $event),\n    title: \"人物详情\",\n    \"close-on-click-modal\": false,\n    \"before-close\": $setup.handleClose,\n    size: \"600px\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"before-close\"]);\n}","map":{"version":3,"mappings":";;gCAQIA,oBAAsB,MAAtB,EAAsB,IAAtB,EAAM,WAAN,EAAe;AAAA;AAAf;;;;;uBAPFC,aAQYC,oBARZ,EAQY;gBAPDC,iBAOC;+DAPDA,oBAAYC,OAOX;IANVC,KAAK,EAAC,MAMI;IALT,wBAAsB,KAKb;IAJT,gBAAcC,kBAIL;IAHVC,IAAI,EAAC;EAGK,CARZ;sBAOE,MAAsB,CAAtBC,UAAsB;;;;GAPxB;;EAAA","names":["_createElementVNode","_createBlock","_component_el_drawer","_ctx","$event","title","$setup","size","_hoisted_1"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\components\\detailDrawer.vue"],"sourcesContent":["<template>\r\n  <el-drawer\r\n    v-model=\"drawerDetail\"\r\n    title=\"人物详情\"\r\n    :close-on-click-modal=\"false\"\r\n    :before-close=\"handleClose\"\r\n    size='600px'\r\n  >\r\n    <span>Hi there!</span>\r\n  </el-drawer>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, watch } from \"vue\";\r\n\r\nexport default {\r\n  name: \"detailDrawer\",\r\n  props: {\r\n    drawer: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  setup(props,context) {\r\n    let drawerDetail = reactive({\r\n      drawerDetail: false,\r\n    });\r\n\r\n    watch(\r\n      () => props.drawer,\r\n      (newValue, oldValue) => {\r\n        console.log(\"---drawer---\", newValue, oldValue);\r\n        drawerDetail.drawerDetail = newValue;\r\n        if (newValue || oldValue) return;\r\n      }\r\n    );\r\n\r\n    const handleClose = () => {\r\n      drawerDetail.drawerDetail = false\r\n      context.emit(\"changeDrawer\");\r\n    };\r\n\r\n    return {\r\n      ...toRefs(drawerDetail),\r\n      handleClose,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}