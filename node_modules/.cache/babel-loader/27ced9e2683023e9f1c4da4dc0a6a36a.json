{"ast":null,"code":"import { shallowRef, ref, onMounted } from 'vue';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { easeInOutCubic } from '../../../utils/animation.mjs';\nimport { throwError } from '../../../utils/error.mjs';\n\nconst useBackTop = (props, emit, componentName) => {\n  const el = shallowRef();\n  const container = shallowRef();\n  const visible = ref(false);\n\n  const scrollToTop = () => {\n    if (!el.value) return;\n    const beginTime = Date.now();\n    const beginValue = el.value.scrollTop;\n\n    const frameFunc = () => {\n      if (!el.value) return;\n      const progress = (Date.now() - beginTime) / 500;\n\n      if (progress < 1) {\n        el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress));\n        requestAnimationFrame(frameFunc);\n      } else {\n        el.value.scrollTop = 0;\n      }\n    };\n\n    requestAnimationFrame(frameFunc);\n  };\n\n  const handleScroll = () => {\n    if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight;\n  };\n\n  const handleClick = event => {\n    scrollToTop();\n    emit(\"click\", event);\n  };\n\n  const handleScrollThrottled = useThrottleFn(handleScroll, 300, true);\n  useEventListener(container, \"scroll\", handleScrollThrottled);\n  onMounted(() => {\n    var _a;\n\n    container.value = document;\n    el.value = document.documentElement;\n\n    if (props.target) {\n      el.value = (_a = document.querySelector(props.target)) != null ? _a : void 0;\n\n      if (!el.value) {\n        throwError(componentName, `target does not exist: ${props.target}`);\n      }\n\n      container.value = el.value;\n    }\n  });\n  return {\n    visible,\n    handleClick\n  };\n};\n\nexport { useBackTop };","map":{"version":3,"mappings":";;;;;;AAGY,MAACA,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,aAAd,KAAgC;EACxD,MAAMC,EAAE,GAAGC,UAAU,EAArB;EACA,MAAMC,SAAS,GAAGD,UAAU,EAA5B;EACA,MAAME,OAAO,GAAGC,GAAG,CAAC,KAAD,CAAnB;;EACA,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAI,CAACL,EAAE,CAACM,KAAR,EACE;IACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;IACA,MAAMC,UAAU,GAAGV,EAAE,CAACM,KAAH,CAASK,SAA5B;;IACA,MAAMC,SAAS,GAAG,MAAM;MACtB,IAAI,CAACZ,EAAE,CAACM,KAAR,EACE;MACF,MAAMO,QAAQ,GAAG,CAACL,IAAI,CAACC,GAAL,KAAaF,SAAd,IAA2B,GAA5C;;MACA,IAAIM,QAAQ,GAAG,CAAf,EAAkB;QAChBb,EAAE,CAACM,KAAH,CAASK,SAAT,GAAqBD,UAAU,IAAI,IAAII,cAAc,CAACD,QAAD,CAAtB,CAA/B;QACAE,qBAAqB,CAACH,SAAD,CAArB;MACD,CAHD,MAGO;QACLZ,EAAE,CAACM,KAAH,CAASK,SAAT,GAAqB,CAArB;MACD;IACF,CAVD;;IAWAI,qBAAqB,CAACH,SAAD,CAArB;EACD,CAjBD;;EAkBA,MAAMI,YAAY,GAAG,MAAM;IACzB,IAAIhB,EAAE,CAACM,KAAP,EACEH,OAAO,CAACG,KAAR,GAAgBN,EAAE,CAACM,KAAH,CAASK,SAAT,IAAsBd,KAAK,CAACoB,gBAA5C;EACH,CAHD;;EAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;IAC7Bd,WAAW;IACXP,IAAI,CAAC,OAAD,EAAUqB,KAAV,CAAJ;EACD,CAHD;;EAIA,MAAMC,qBAAqB,GAAGC,aAAa,CAACL,YAAD,EAAe,GAAf,EAAoB,IAApB,CAA3C;EACAM,gBAAgB,CAACpB,SAAD,EAAY,QAAZ,EAAsBkB,qBAAtB,CAAhB;EACAG,SAAS,CAAC,MAAM;IACd,IAAIC,EAAJ;;IACAtB,SAAS,CAACI,KAAV,GAAkBmB,QAAlB;IACAzB,EAAE,CAACM,KAAH,GAAWmB,QAAQ,CAACC,eAApB;;IACA,IAAI7B,KAAK,CAAC8B,MAAV,EAAkB;MAChB3B,EAAE,CAACM,KAAH,GAAW,CAACkB,EAAE,GAAGC,QAAQ,CAACG,aAAT,CAAuB/B,KAAK,CAAC8B,MAA7B,CAAN,KAA+C,IAA/C,GAAsDH,EAAtD,GAA2D,KAAK,CAA3E;;MACA,IAAI,CAACxB,EAAE,CAACM,KAAR,EAAe;QACbuB,UAAU,CAAC9B,aAAD,EAAiB,0BAAyBF,KAAK,CAAC8B,MAAO,EAAvD,CAAV;MACD;;MACDzB,SAAS,CAACI,KAAV,GAAkBN,EAAE,CAACM,KAArB;IACD;EACF,CAXQ,CAAT;EAYA,OAAO;IACLH,OADK;IAELe;EAFK,CAAP;AAIF,CAhDY","names":["useBackTop","props","emit","componentName","el","shallowRef","container","visible","ref","scrollToTop","value","beginTime","Date","now","beginValue","scrollTop","frameFunc","progress","easeInOutCubic","requestAnimationFrame","handleScroll","visibilityHeight","handleClick","event","handleScrollThrottled","useThrottleFn","useEventListener","onMounted","_a","document","documentElement","target","querySelector","throwError"],"sources":["../../../../../../packages/components/backtop/src/use-backtop.ts"],"sourcesContent":["import { onMounted, ref, shallowRef } from 'vue'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { easeInOutCubic, throwError } from '@element-plus/utils'\n\nimport type { SetupContext } from 'vue'\nimport type { BacktopEmits, BacktopProps } from './backtop'\n\nexport const useBackTop = (\n  props: BacktopProps,\n  emit: SetupContext<BacktopEmits>['emit'],\n  componentName: string\n) => {\n  const el = shallowRef<HTMLElement>()\n  const container = shallowRef<Document | HTMLElement>()\n  const visible = ref(false)\n\n  const scrollToTop = () => {\n    // TODO: use https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo, with behavior: 'smooth'\n\n    if (!el.value) return\n    const beginTime = Date.now()\n    const beginValue = el.value.scrollTop\n    const frameFunc = () => {\n      if (!el.value) return\n      const progress = (Date.now() - beginTime) / 500\n      if (progress < 1) {\n        el.value.scrollTop = beginValue * (1 - easeInOutCubic(progress))\n        requestAnimationFrame(frameFunc)\n      } else {\n        el.value.scrollTop = 0\n      }\n    }\n    requestAnimationFrame(frameFunc)\n  }\n  const handleScroll = () => {\n    if (el.value) visible.value = el.value.scrollTop >= props.visibilityHeight\n  }\n\n  const handleClick = (event: MouseEvent) => {\n    scrollToTop()\n    emit('click', event)\n  }\n\n  const handleScrollThrottled = useThrottleFn(handleScroll, 300, true)\n\n  useEventListener(container, 'scroll', handleScrollThrottled)\n  onMounted(() => {\n    container.value = document\n    el.value = document.documentElement\n\n    if (props.target) {\n      el.value = document.querySelector<HTMLElement>(props.target) ?? undefined\n      if (!el.value) {\n        throwError(componentName, `target does not exist: ${props.target}`)\n      }\n      container.value = el.value\n    }\n  })\n\n  return {\n    visible,\n    handleClick,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}