{"ast":null,"code":"import { onMounted, reactive, ref, toRefs, watch } from \"@vue/runtime-core\";\nimport { attribute } from \"@/utils/enum\";\nimport store from \"@/store\";\nexport default {\n  name: \"addDialog\",\n  props: {\n    dialogVisible: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Object,\n      default: () => {}\n    },\n    id: {\n      type: Number,\n      default: 9\n    }\n  },\n\n  setup(props, context) {\n    let state = reactive(store.state.Original_god);\n    console.log(state.list);\n    const rules = {\n      name: [{\n        required: true,\n        message: \"请输入姓名\"\n      }],\n      type: [{\n        required: true,\n        message: \"请选择属性\"\n      }]\n    };\n    const formRef = ref(null);\n    let dialogFormVisible = reactive({\n      dialogFormVisible: false\n    });\n    let form = reactive({\n      form: {\n        name: \"\",\n        type: \"\"\n      }\n    });\n    let attributeList = attribute;\n    onMounted(() => {\n      console.log(\"---isEdit---\", props.isEdit.isEdit); // console.log('---id---',props.id)\n    }); // console.log(\"---props---\", props.dialogVisible);\n\n    watch(props.dialogVisible, (newValue, oldValue) => {\n      // console.log(\"---dialogVisible---\", newValue, oldValue);\n      dialogFormVisible.dialogFormVisible = newValue.dialogFormVisible; // console.log(\"---dialogFormVisible---\", dialogFormVisible);\n\n      if (newValue || oldValue) return;\n    });\n    watch([() => props.id, props.isEdit], (newValue, oldValue) => {\n      console.log(\"---id and isEdit---\", newValue, oldValue);\n      console.log(\"---newValue1111111---\", newValue[1].isEdit, form.form);\n\n      if (newValue[1].isEdit) {\n        getRowData(props.id);\n        console.log(\"---form---\", form);\n      } else {\n        form.form = {\n          name: \"\",\n          type: \"\"\n        };\n        console.log(\"---newValue2222222---\", newValue[1].isEdit, form.form);\n      }\n\n      if (newValue || oldValue) return;\n    });\n\n    function Cancel() {\n      dialogFormVisible.dialogFormVisible = false;\n\n      if (!props.isEdit.isEdit) {\n        console.log(\"---!isEdit1111---\", !props.isEdit.isEdit);\n        form.form = {\n          name: \"\",\n          type: \"\"\n        };\n        formRef.value.resetFields(); // form.form = {}\n      } else {\n        console.log(\"---!changeDialog11111---\", !props.isEdit.isEdit);\n        context.emit(\"changeIsEdit\", !props.isEdit.isEdit);\n      }\n\n      context.emit(\"changeDialog\");\n    }\n\n    function Confirm() {\n      formRef.value.validate(valid => {\n        if (valid) {\n          console.log(\"Confirm\", !props.isEdit.isEdit);\n\n          if (!props.isEdit.isEdit) {\n            addData();\n          } else {\n            editData();\n          }\n        }\n      });\n    }\n\n    function addData() {\n      let personList = state.list; // console.log('---form and personList---',form,personList,personList.length);\n\n      personList.push({\n        id: personList.length + 1,\n        ...form.form\n      }); // console.log('---personList---',personList,personList.length);\n\n      store.commit(\"changeList\", personList);\n      console.log(\"---count---\", state.list);\n      dialogFormVisible.dialogFormVisible = false;\n      context.emit(\"changeDialog\", false);\n      formRef.value.resetFields();\n    }\n\n    function editData() {\n      console.log(\"---id and from ---\", props.id, form.form);\n      let personList = state.list;\n      let index = personList.map(item => item.id).indexOf(props.id);\n      console.log(\"---form and personList---\", form, personList, props.id, index);\n      personList.splice(index, 1, form.form); // console.log('---personList---',personList,personList.length);\n\n      store.commit(\"changeList\", personList); // console.log(\"---count---\", state.list);\n\n      dialogFormVisible.dialogFormVisible = false;\n      context.emit(\"changeDialog\", false);\n    }\n\n    function getRowData(id) {\n      let personList = state.list;\n      let formData = personList.filter(item => {\n        return item.id === id;\n      });\n      form.form = { ...formData[0]\n      };\n      console.log(\"---form111111---\", form);\n    }\n\n    return {\n      dialogFormVisible,\n      ...toRefs(form),\n      attributeList,\n      rules,\n      formRef,\n      Cancel,\n      Confirm\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","reactive","ref","toRefs","watch","attribute","store","name","props","dialogVisible","type","Object","default","isEdit","id","Number","setup","context","state","Original_god","console","log","list","rules","required","message","formRef","dialogFormVisible","form","attributeList","newValue","oldValue","getRowData","Cancel","value","resetFields","emit","Confirm","validate","valid","addData","editData","personList","push","length","commit","index","map","item","indexOf","splice","formData","filter"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\components\\addDialog.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"dialogFormVisible.dialogFormVisible\"\r\n      :title=\"isEdit.isEdit ? `编辑人物信息` : `新增人物信息`\"\r\n      modal\r\n      :close-on-click-modal=\"false\"\r\n      :before-close=\"Cancel\"\r\n    >\r\n      <el-form :model=\"form\" label-suffix=\":\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"姓名\" label-width=\"150px\" prop=\"name\">\r\n          <el-input\r\n            v-model=\"form.name\"\r\n            placeholder=\"请输入姓名\"\r\n            style=\"width: 250px\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"属性\" label-width=\"150px\" prop=\"type\">\r\n          <el-select\r\n            v-model=\"form.type\"\r\n            placeholder=\"请选择属性\"\r\n            style=\"width: 250px\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in attributeList\"\r\n              :key=\"index\"\r\n              :label=\"item.name\"\r\n              :value=\"item.type\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"Cancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"Confirm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, reactive, ref, toRefs, watch } from \"@vue/runtime-core\";\r\nimport { attribute } from \"@/utils/enum\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  name: \"addDialog\",\r\n  props: {\r\n    dialogVisible: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    isEdit: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    id: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n  },\r\n  setup(props, context) {\r\n    let state = reactive(store.state.Original_god);\r\n    console.log(state.list);\r\n\r\n    const rules = {\r\n      name: [{ required: true, message: \"请输入姓名\" }],\r\n      type: [{ required: true, message: \"请选择属性\" }],\r\n    };\r\n    const formRef = ref(null);\r\n\r\n    let dialogFormVisible = reactive({\r\n      dialogFormVisible: false,\r\n    });\r\n    let form = reactive({\r\n      form: {\r\n        name: \"\",\r\n        type: \"\",\r\n      },\r\n    });\r\n    let attributeList = attribute;\r\n    onMounted(() => {\r\n      console.log(\"---isEdit---\", props.isEdit.isEdit);\r\n      // console.log('---id---',props.id)\r\n    });\r\n\r\n    // console.log(\"---props---\", props.dialogVisible);\r\n    watch(props.dialogVisible, (newValue, oldValue) => {\r\n      // console.log(\"---dialogVisible---\", newValue, oldValue);\r\n      dialogFormVisible.dialogFormVisible = newValue.dialogFormVisible;\r\n      // console.log(\"---dialogFormVisible---\", dialogFormVisible);\r\n      if (newValue || oldValue) return;\r\n    });\r\n    watch([() => props.id, props.isEdit], (newValue, oldValue) => {\r\n      console.log(\"---id and isEdit---\", newValue, oldValue);\r\n      console.log(\"---newValue1111111---\", newValue[1].isEdit, form.form);\r\n\r\n      if (newValue[1].isEdit) {\r\n        getRowData(props.id);\r\n        console.log(\"---form---\", form);\r\n      } else {\r\n        form.form = { name: \"\", type: \"\" };\r\n        console.log(\"---newValue2222222---\", newValue[1].isEdit, form.form);\r\n      }\r\n      if (newValue || oldValue) return;\r\n    });\r\n    function Cancel() {\r\n      dialogFormVisible.dialogFormVisible = false;\r\n      if (!props.isEdit.isEdit) {\r\n        console.log(\"---!isEdit1111---\", !props.isEdit.isEdit);\r\n        form.form = { name: \"\", type: \"\" };\r\n\r\n        formRef.value.resetFields();\r\n        // form.form = {}\r\n      } else {\r\n        console.log(\"---!changeDialog11111---\", !props.isEdit.isEdit);\r\n        context.emit(\"changeIsEdit\",!props.isEdit.isEdit);\r\n      }\r\n      context.emit(\"changeDialog\");\r\n    }\r\n    function Confirm() {\r\n      formRef.value.validate((valid) => {\r\n        if (valid) {\r\n          console.log(\"Confirm\", !props.isEdit.isEdit);\r\n          if (!props.isEdit.isEdit) {\r\n            addData();\r\n          } else {\r\n            editData();\r\n          }\r\n        }\r\n      });\r\n    }\r\n    function addData() {\r\n      let personList = state.list;\r\n      // console.log('---form and personList---',form,personList,personList.length);\r\n      personList.push({ id: personList.length + 1, ...form.form });\r\n      // console.log('---personList---',personList,personList.length);\r\n      store.commit(\"changeList\", personList);\r\n      console.log(\"---count---\", state.list);\r\n      dialogFormVisible.dialogFormVisible = false;\r\n      context.emit(\"changeDialog\", false);\r\n      formRef.value.resetFields();\r\n    }\r\n    function editData() {\r\n      console.log(\"---id and from ---\", props.id, form.form);\r\n      let personList = state.list;\r\n      let index = personList.map((item) => item.id).indexOf(props.id);\r\n      console.log(\r\n        \"---form and personList---\",\r\n        form,\r\n        personList,\r\n        props.id,\r\n        index\r\n      );\r\n      personList.splice(index, 1, form.form);\r\n      // console.log('---personList---',personList,personList.length);\r\n      store.commit(\"changeList\", personList);\r\n      // console.log(\"---count---\", state.list);\r\n      dialogFormVisible.dialogFormVisible = false;\r\n      context.emit(\"changeDialog\", false);\r\n    }\r\n    function getRowData(id) {\r\n      let personList = state.list;\r\n      let formData = personList.filter((item) => {\r\n        return item.id === id;\r\n      });\r\n      form.form = { ...formData[0] };\r\n      console.log(\"---form111111---\", form);\r\n    }\r\n\r\n    return {\r\n      dialogFormVisible,\r\n      ...toRefs(form),\r\n      attributeList,\r\n      rules,\r\n      formRef,\r\n      Cancel,\r\n      Confirm,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}