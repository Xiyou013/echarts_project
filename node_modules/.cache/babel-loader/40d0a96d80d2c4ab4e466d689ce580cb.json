{"ast":null,"code":"import dayjs from 'dayjs';\nimport { inject, nextTick, onMounted, reactive, ref } from 'vue';\nexport default {\n  __name: 'vehicleEchartsTwo',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let echarts = inject('ec'); // const colorList = ['#F1B164', '#05D2FC']\n\n    let vehicle2 = 'vehicle2';\n    let myChart; // const changeSize = (val) => {\n    //     let nowClientWidth =\n    //         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    //     // console.log('nowClientWidth', nowClientWidth)\n    //     return val * (nowClientWidth / 1920)\n    // }\n    // const nowSize = (val) => {\n    //     //   console.log(val instanceof Array)\n    //     let data = ''\n    //     let arr = []\n    //     if (typeof val === 'object') {\n    //         if (val instanceof Array) {\n    //             val.forEach((item) => {\n    //                 let size = changeSize(item)\n    //                 arr.push(size)\n    //             })\n    //             data = arr\n    //         }\n    //     } else {\n    //         data = changeSize(val)\n    //     }\n    //     //   console.log('data::', data)\n    //     return data\n    // }\n    // const getListData = () => {\n    // data.forEach((item, index) => {\n    //     item.lineStyle = {\n    //         color: colorList[index],\n    //         width: 2\n    //     }\n    //     item.yAxisIndex = index\n    // })\n    // }\n\n    let time = ref([{\n      name: 'Direct',\n      type: 'bar',\n      emphasis: {\n        focus: 'series'\n      },\n      data: [320, 332, 301, 334, 390, 330, 320]\n    }, {\n      name: 'Email',\n      type: 'bar',\n      stack: 'Ad',\n      emphasis: {\n        focus: 'series'\n      },\n      data: [120, 132, 101, 134, 90, 230, 210]\n    }, {\n      name: 'Union Ads',\n      type: 'bar',\n      stack: 'Ad',\n      emphasis: {\n        focus: 'series'\n      },\n      data: [220, 182, 191, 234, 290, 330, 310]\n    }, {\n      name: 'Video Ads',\n      type: 'bar',\n      stack: 'Ad',\n      emphasis: {\n        focus: 'series'\n      },\n      data: [150, 232, 201, 154, 190, 330, 410]\n    }]);\n    const data = reactive({\n      options: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        // legend: {},\n        grid: {\n          left: '0%',\n          right: '0%',\n          top: '15%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          axisLabel: {\n            // 坐标轴刻度标签的相关设置\n            show: true,\n            // 控制显隐\n            color: '#E4E9EB',\n            // x轴字体颜色\n            fontSize: 17,\n            //\n            margin: 15 // x轴标签距离x轴距离\n\n          },\n          // x轴样式设置\n          axisLine: {\n            lineStyle: {\n              color: '#E4E9EB',\n              width: 2\n            }\n          },\n          // x轴刻度线显隐\n          axisTick: {\n            show: false\n          }\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '步/天',\n          // 名称位置\n          nameLocation: 'end',\n          // 名称间隔\n          nameGap: 20,\n          // y轴名称样式设置\n          nameTextStyle: {\n            color: '#E4E9EB',\n            fontSize: 15,\n            padding: [0, 50, 0, 0]\n          },\n          axisLabel: {\n            // 坐标轴刻度标签的相关设置\n            show: true,\n            // 控制显隐\n            color: '#E4E9EB',\n            // y轴字体颜色\n            fontSize: 17,\n            margin: 15\n          },\n          // y轴分割线样式设置\n          splitLine: {\n            show: true,\n            lineStyle: {\n              width: 2,\n              color: 'rgba(228, 233, 235, 0.1)'\n            }\n          }\n        }],\n        series: time.value\n      }\n    }); // 初始化折线图\n\n    const initChart = () => {\n      // setTimeout(() => {\n      console.log('12132123'); // //检测是否已经存在echarts实例，如果不存在，则不再去初始化\n      // let myChart = echarts.getInstanceByDom(\n      //     document.getElementById('vehicle2')\n      // );\n      // if (myChart == null) {\n      //     console.log('123');\n      //     myChart = echarts.init(document.getElementById('vehicle2'));\n      //     myChart.setOption(data.options);\n      // }\n\n      myChart = echarts.init(document.getElementById(vehicle2));\n      myChart.setOption(data.options); // }, 2000)\n    }; // 监听更改折线图y轴有关数据\n    // const changeyAxis = () => {\n    //     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[0].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[1].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\n    //     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\n    //     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\n    //     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\n    //     data.options.yAxis[0].nameGap = nowSize(20)\n    //     data.options.yAxis[1].nameGap = nowSize(20)\n    //     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\n    //     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\n    // }\n    // 监听更改折线图x轴有关数据\n    // const changexAxis = () => {\n    //     data.options.xAxis.axisLabel.fontSize = nowSize(17)\n    //     data.options.xAxis.axisLabel.margin = nowSize(15)\n    //     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\n    // }\n\n\n    onMounted(() => {\n      // getListData(time.value)\n      nextTick(() => {\n        initChart();\n      }); // initChart()\n    });\n\n    window.onresize = ec => {\n      // 监听窗口大小变化\n      // myChart.resize() // 自适应大小变化\n      console.log('22222222'); // changeyAxis()\n      // changexAxis()\n      // myChart.setOption(data.options)\n\n      myChart.resize(); // 自适应大小变化\n\n      if (ec) return;\n    };\n\n    const __returned__ = {\n      echarts,\n      vehicle2,\n      myChart,\n      time,\n      data,\n      initChart,\n      dayjs,\n      inject,\n      nextTick,\n      onMounted,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["dayjs","inject","nextTick","onMounted","reactive","ref","echarts","vehicle2","myChart","time","name","type","emphasis","focus","data","stack","options","tooltip","trigger","axisPointer","grid","left","right","top","bottom","containLabel","xAxis","axisLabel","show","color","fontSize","margin","axisLine","lineStyle","width","axisTick","yAxis","nameLocation","nameGap","nameTextStyle","padding","splitLine","series","value","initChart","console","log","init","document","getElementById","setOption","window","onresize","ec","resize"],"sources":["F:/hub-code/echarts_project/src/views/test2/components/vehicleEchartsTwo.vue"],"sourcesContent":["<template>\r\n    <div ref=\"vehicle1\" :id=\"vehicle2\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport dayjs from 'dayjs'\r\nimport { inject, nextTick, onMounted, reactive, ref } from 'vue'\r\n\r\nlet echarts = inject('ec')\r\n// const colorList = ['#F1B164', '#05D2FC']\r\nlet vehicle2 = 'vehicle2'\r\nlet myChart\r\n\r\n// const changeSize = (val) => {\r\n//     let nowClientWidth =\r\n//         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n//     // console.log('nowClientWidth', nowClientWidth)\r\n//     return val * (nowClientWidth / 1920)\r\n// }\r\n\r\n// const nowSize = (val) => {\r\n//     //   console.log(val instanceof Array)\r\n//     let data = ''\r\n//     let arr = []\r\n//     if (typeof val === 'object') {\r\n//         if (val instanceof Array) {\r\n//             val.forEach((item) => {\r\n//                 let size = changeSize(item)\r\n//                 arr.push(size)\r\n//             })\r\n//             data = arr\r\n//         }\r\n//     } else {\r\n//         data = changeSize(val)\r\n//     }\r\n//     //   console.log('data::', data)\r\n//     return data\r\n// }\r\n\r\n// const getListData = () => {\r\n// data.forEach((item, index) => {\r\n//     item.lineStyle = {\r\n//         color: colorList[index],\r\n//         width: 2\r\n//     }\r\n//     item.yAxisIndex = index\r\n// })\r\n\r\n// }\r\n\r\nlet time = ref([\r\n    {\r\n        name: 'Direct',\r\n        type: 'bar',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            320, 332, 301, 334, 390, 330, 320\r\n        ]\r\n    },\r\n    {\r\n        name: 'Email',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            120, 132, 101, 134, 90, 230, 210\r\n        ]\r\n    },\r\n    {\r\n        name: 'Union Ads',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            220, 182, 191, 234, 290, 330, 310\r\n        ]\r\n    },\r\n    {\r\n        name: 'Video Ads',\r\n        type: 'bar',\r\n        stack: 'Ad',\r\n        emphasis: {\r\n            focus: 'series'\r\n        },\r\n        data: [\r\n            150, 232, 201, 154, 190, 330, 410\r\n        ]\r\n    },\r\n])\r\n\r\nconst data = reactive({\r\n    options: {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n                type: 'shadow'\r\n            }\r\n        },\r\n        // legend: {},\r\n        grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            top: '15%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        xAxis: [\r\n            {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                axisLabel: {\r\n                    // 坐标轴刻度标签的相关设置\r\n                    show: true, // 控制显隐\r\n                    color: '#E4E9EB', // x轴字体颜色\r\n                    fontSize: 17, //\r\n                    margin: 15, // x轴标签距离x轴距离\r\n                },\r\n                // x轴样式设置\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        color: '#E4E9EB',\r\n                        width: 2\r\n                    }\r\n                },\r\n                // x轴刻度线显隐\r\n                axisTick: {\r\n                    show: false\r\n                }\r\n            }\r\n        ],\r\n        yAxis: [\r\n            {\r\n                type: 'value',\r\n                name: '步/天',\r\n                // 名称位置\r\n                nameLocation: 'end',\r\n                // 名称间隔\r\n                nameGap: 20,\r\n                // y轴名称样式设置\r\n                nameTextStyle: {\r\n                    color: '#E4E9EB',\r\n                    fontSize: 15,\r\n                    padding: [0, 50, 0, 0]\r\n                },\r\n                axisLabel: {\r\n                    // 坐标轴刻度标签的相关设置\r\n                    show: true, // 控制显隐\r\n                    color: '#E4E9EB', // y轴字体颜色\r\n                    fontSize: 17,\r\n                    margin: 15\r\n                },\r\n                // y轴分割线样式设置\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        width: 2,\r\n                        color: 'rgba(228, 233, 235, 0.1)'\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        series: time.value\r\n    }\r\n})\r\n\r\n// 初始化折线图\r\nconst initChart = () => {\r\n    // setTimeout(() => {\r\n    console.log('12132123');\r\n    // //检测是否已经存在echarts实例，如果不存在，则不再去初始化\r\n    // let myChart = echarts.getInstanceByDom(\r\n    //     document.getElementById('vehicle2')\r\n    // );\r\n    // if (myChart == null) {\r\n    //     console.log('123');\r\n    //     myChart = echarts.init(document.getElementById('vehicle2'));\r\n    //     myChart.setOption(data.options);\r\n    // }\r\n\r\n    myChart = echarts.init(document.getElementById(vehicle2))\r\n    myChart.setOption(data.options)\r\n    // }, 2000)\r\n\r\n}\r\n// 监听更改折线图y轴有关数据\r\n// const changeyAxis = () => {\r\n//     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[1].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\r\n//     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\r\n//     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\r\n//     data.options.yAxis[0].nameGap = nowSize(20)\r\n//     data.options.yAxis[1].nameGap = nowSize(20)\r\n//     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\r\n//     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\r\n// }\r\n// 监听更改折线图x轴有关数据\r\n// const changexAxis = () => {\r\n//     data.options.xAxis.axisLabel.fontSize = nowSize(17)\r\n//     data.options.xAxis.axisLabel.margin = nowSize(15)\r\n//     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\r\n// }\r\n\r\nonMounted(() => {\r\n    // getListData(time.value)\r\n    nextTick(() => {\r\n        initChart()\r\n    })\r\n    // initChart()\r\n})\r\nwindow.onresize = (ec) => {\r\n    // 监听窗口大小变化\r\n    // myChart.resize() // 自适应大小变化\r\n    console.log('22222222')\r\n    // changeyAxis()\r\n    // changexAxis()\r\n    // myChart.setOption(data.options)\r\n    myChart.resize() // 自适应大小变化\r\n    if (ec) return\r\n}\r\n</script>\r\n\r\n<style>\r\n.vehicle_echarts {\r\n    width: 92vw;\r\n    height: 28vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n.vehicle_echarts1 {\r\n    width: 65vw;\r\n    height: 35vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n#vehicle2 {\r\n    width: 90%;\r\n    /* height: 100%; */\r\n    height: inherit;\r\n    margin-left: 5%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}