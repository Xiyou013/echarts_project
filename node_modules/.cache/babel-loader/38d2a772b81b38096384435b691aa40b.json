{"ast":null,"code":"import { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\nimport { getTypeList } from '@/api/echarts.js';\nexport default {\n  __name: 'addDialog',\n  props: {\n    dialogVisible: {\n      type: Object,\n      default: () => {}\n    },\n    isEdit: {\n      type: Object,\n      default: () => {}\n    },\n    id: {\n      type: Number,\n      default: 9\n    }\n  },\n  emits: ['changeDialog', 'changeIsEdit'],\n\n  setup(__props, {\n    expose,\n    emit: emits\n  }) {\n    expose();\n    const props = __props; // let state = reactive(store.state.Original_god);\n    // console.log(state.list);\n\n    const rules = {\n      name: [{\n        required: true,\n        message: \"请输入姓名\"\n      }],\n      type: [{\n        required: true,\n        message: \"请选择属性\"\n      }]\n    };\n    const formRef = ref(null);\n    let dialogFormVisible = reactive({\n      dialogFormVisible: false\n    });\n    let form = reactive({\n      form: {\n        name: \"\",\n        type: \"\"\n      }\n    }); // console.log(\"---props---\", props.dialogVisible);\n\n    watch(props.dialogVisible, (newValue, oldValue) => {\n      // console.log(\"---dialogVisible---\", newValue, oldValue);\n      dialogFormVisible.dialogFormVisible = newValue.dialogFormVisible; // console.log(\"---dialogFormVisible---\", dialogFormVisible);\n\n      if (newValue || oldValue) return;\n    });\n    watch([() => props.id, props.isEdit], (newValue, oldValue) => {\n      console.log(\"---id and isEdit---\", newValue, oldValue);\n      console.log(\"---newValue1111111---\", newValue[1].isEdit, form.form);\n\n      if (newValue[1].isEdit) {\n        getRowData(props.id);\n        console.log(\"---form---\", form);\n      } else {\n        form.form = {\n          name: \"\",\n          type: \"\"\n        };\n        console.log(\"---newValue2222222---\", newValue[1].isEdit, form.form);\n      }\n\n      if (newValue || oldValue) return;\n    });\n\n    function Cancel() {\n      dialogFormVisible.dialogFormVisible = false;\n\n      if (!props.isEdit.isEdit) {\n        console.log(\"---!isEdit1111---\", !props.isEdit.isEdit);\n        form.form = {\n          name: \"\",\n          type: \"\"\n        };\n        formRef.value.resetFields(); // form.form = {}\n      } else {\n        console.log(\"---!changeDialog11111---\", !props.isEdit.isEdit);\n        emits.emit(\"changeIsEdit\", !props.isEdit.isEdit);\n      }\n\n      emits.emit(\"changeDialog\");\n    }\n\n    function Confirm() {\n      formRef.value.validate(valid => {\n        if (valid) {\n          console.log(\"Confirm\", !props.isEdit.isEdit);\n\n          if (!props.isEdit.isEdit) {\n            addData();\n          } else {\n            editData();\n          }\n        }\n      });\n    } // function addData() {\n    //   let personList = state.list;\n    //   // console.log('---form and personList---',form,personList,personList.length);\n    //   personList.push({ id: personList.length + 1, ...form.form });\n    //   // console.log('---personList---',personList,personList.length);\n    //   store.commit(\"changeList\", personList);\n    //   console.log(\"---count---\", state.list);\n    //   dialogFormVisible.dialogFormVisible = false;\n    //   emits.emit(\"changeDialog\", false);\n    //   formRef.value.resetFields();\n    // }\n    // function editData() {\n    //   console.log(\"---id and from ---\", props.id, form.form);\n    //   let personList = state.list;\n    //   let index = personList.map((item) => item.id).indexOf(props.id);\n    //   console.log(\n    //     \"---form and personList---\",\n    //     form,\n    //     personList,\n    //     props.id,\n    //     index\n    //   );\n    //   personList.splice(index, 1, form.form);\n    //   // console.log('---personList---',personList,personList.length);\n    //   store.commit(\"changeList\", personList);\n    //   // console.log(\"---count---\", state.list);\n    //   dialogFormVisible.dialogFormVisible = false;\n    //   emits.emit(\"changeDialog\", false);\n    // }\n    // function getRowData(id) {\n    //   let personList = state.list;\n    //   let formData = personList.filter((item) => {\n    //     return item.id === id;\n    //   });\n    //   form.form = { ...formData[0] };\n    //   console.log(\"---form111111---\", form);\n    // }\n\n\n    let attributeList = ref([]);\n\n    const getTypeData = () => {\n      getTypeList().then(res => {\n        console.log('res:::', res);\n        attributeList.value = res.data.data;\n      });\n    };\n\n    onMounted(() => {\n      getTypeData();\n    });\n    const __returned__ = {\n      props,\n      emits,\n      rules,\n      formRef,\n      dialogFormVisible,\n      form,\n      Cancel,\n      Confirm,\n      attributeList,\n      getTypeData,\n      onMounted,\n      reactive,\n      ref,\n      watch,\n      getTypeList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","reactive","ref","watch","getTypeList","rules","name","required","message","type","formRef","dialogFormVisible","form","props","dialogVisible","newValue","oldValue","id","isEdit","console","log","getRowData","Cancel","value","resetFields","emits","emit","Confirm","validate","valid","addData","editData","attributeList","getTypeData","then","res","data"],"sources":["F:/hub-code/echarts_project/src/components/addDialog.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog\r\n      v-model=\"dialogFormVisible.dialogFormVisible\"\r\n      :title=\"isEdit.isEdit ? `编辑人物信息` : `新增人物信息`\"\r\n      modal\r\n      :close-on-click-modal=\"false\"\r\n      :before-close=\"Cancel\"\r\n    >\r\n      <el-form :model=\"form\" label-suffix=\":\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"姓名\" label-width=\"150px\" prop=\"name\">\r\n          <el-input\r\n            v-model=\"form.name\"\r\n            placeholder=\"请输入姓名\"\r\n            style=\"width: 250px\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"属性\" label-width=\"150px\" prop=\"type\">\r\n          <el-select\r\n            v-model=\"form.type\"\r\n            placeholder=\"请选择属性\"\r\n            style=\"width: 250px\"\r\n          >\r\n            <el-option\r\n              v-for=\"(item, index) in attributeList\"\r\n              :key=\"index\"\r\n              :label=\"item.name\"\r\n              :value=\"item.type\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"Cancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"Confirm\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, reactive, ref, watch } from \"@vue/runtime-core\";\r\nimport { getTypeList } from '@/api/echarts.js'\r\n\r\nconst props = defineProps({\r\n  dialogVisible: {\r\n    type: Object,\r\n    default: () => { },\r\n  },\r\n  isEdit: {\r\n    type: Object,\r\n    default: () => { },\r\n  },\r\n  id: {\r\n    type: Number,\r\n    default: 9,\r\n  },\r\n})\r\nconst emits = defineEmits(['changeDialog','changeIsEdit'])\r\n\r\n// let state = reactive(store.state.Original_god);\r\n// console.log(state.list);\r\n\r\nconst rules = {\r\n  name: [{ required: true, message: \"请输入姓名\" }],\r\n  type: [{ required: true, message: \"请选择属性\" }],\r\n};\r\nconst formRef = ref(null);\r\n\r\nlet dialogFormVisible = reactive({\r\n  dialogFormVisible: false,\r\n});\r\nlet form = reactive({\r\n  form: {\r\n    name: \"\",\r\n    type: \"\",\r\n  },\r\n});\r\n// console.log(\"---props---\", props.dialogVisible);\r\nwatch(props.dialogVisible, (newValue, oldValue) => {\r\n  // console.log(\"---dialogVisible---\", newValue, oldValue);\r\n  dialogFormVisible.dialogFormVisible = newValue.dialogFormVisible;\r\n  // console.log(\"---dialogFormVisible---\", dialogFormVisible);\r\n  if (newValue || oldValue) return;\r\n});\r\nwatch([() => props.id, props.isEdit], (newValue, oldValue) => {\r\n  console.log(\"---id and isEdit---\", newValue, oldValue);\r\n  console.log(\"---newValue1111111---\", newValue[1].isEdit, form.form);\r\n\r\n  if (newValue[1].isEdit) {\r\n    getRowData(props.id);\r\n    console.log(\"---form---\", form);\r\n  } else {\r\n    form.form = { name: \"\", type: \"\" };\r\n    console.log(\"---newValue2222222---\", newValue[1].isEdit, form.form);\r\n  }\r\n  if (newValue || oldValue) return;\r\n});\r\nfunction Cancel() {\r\n  dialogFormVisible.dialogFormVisible = false;\r\n  if (!props.isEdit.isEdit) {\r\n    console.log(\"---!isEdit1111---\", !props.isEdit.isEdit);\r\n    form.form = { name: \"\", type: \"\" };\r\n\r\n    formRef.value.resetFields();\r\n    // form.form = {}\r\n  } else {\r\n    console.log(\"---!changeDialog11111---\", !props.isEdit.isEdit);\r\n    emits.emit(\"changeIsEdit\",!props.isEdit.isEdit);\r\n  }\r\n  emits.emit(\"changeDialog\");\r\n}\r\nfunction Confirm() {\r\n  formRef.value.validate((valid) => {\r\n    if (valid) {\r\n      console.log(\"Confirm\", !props.isEdit.isEdit);\r\n      if (!props.isEdit.isEdit) {\r\n        addData();\r\n      } else {\r\n        editData();\r\n      }\r\n    }\r\n  });\r\n}\r\n// function addData() {\r\n//   let personList = state.list;\r\n//   // console.log('---form and personList---',form,personList,personList.length);\r\n//   personList.push({ id: personList.length + 1, ...form.form });\r\n//   // console.log('---personList---',personList,personList.length);\r\n//   store.commit(\"changeList\", personList);\r\n//   console.log(\"---count---\", state.list);\r\n//   dialogFormVisible.dialogFormVisible = false;\r\n//   emits.emit(\"changeDialog\", false);\r\n//   formRef.value.resetFields();\r\n// }\r\n// function editData() {\r\n//   console.log(\"---id and from ---\", props.id, form.form);\r\n//   let personList = state.list;\r\n//   let index = personList.map((item) => item.id).indexOf(props.id);\r\n//   console.log(\r\n//     \"---form and personList---\",\r\n//     form,\r\n//     personList,\r\n//     props.id,\r\n//     index\r\n//   );\r\n//   personList.splice(index, 1, form.form);\r\n//   // console.log('---personList---',personList,personList.length);\r\n//   store.commit(\"changeList\", personList);\r\n//   // console.log(\"---count---\", state.list);\r\n//   dialogFormVisible.dialogFormVisible = false;\r\n//   emits.emit(\"changeDialog\", false);\r\n// }\r\n// function getRowData(id) {\r\n//   let personList = state.list;\r\n//   let formData = personList.filter((item) => {\r\n//     return item.id === id;\r\n//   });\r\n//   form.form = { ...formData[0] };\r\n//   console.log(\"---form111111---\", form);\r\n// }\r\n\r\nlet attributeList = ref([])\r\nconst getTypeData = () => {\r\n  getTypeList().then((res) => {\r\n    console.log('res:::', res);\r\n    attributeList.value = res.data.data\r\n  })\r\n}\r\nonMounted(() => {\r\n  getTypeData()\r\n});\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}