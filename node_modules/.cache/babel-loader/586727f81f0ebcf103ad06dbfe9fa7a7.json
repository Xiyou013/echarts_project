{"ast":null,"code":"import dayjs from 'dayjs';\nimport { inject, onMounted, reactive, ref } from 'vue';\nimport { getOneData } from '@/api/echarts';\nexport default {\n  __name: 'vehicleEchartsThree',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    let echarts = inject('ec');\n    const colorList = ['#F1B164', '#05D2FC'];\n    let myChart; // const changeSize = (val) => {\n    //     let nowClientWidth =\n    //         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    //     // console.log('nowClientWidth', nowClientWidth)\n    //     return val * (nowClientWidth / 1920)\n    // }\n    // const nowSize = (val) => {\n    //     //   console.log(val instanceof Array)\n    //     let data = ''\n    //     let arr = []\n    //     if (typeof val === 'object') {\n    //         if (val instanceof Array) {\n    //             val.forEach((item) => {\n    //                 let size = changeSize(item)\n    //                 arr.push(size)\n    //             })\n    //             data = arr\n    //         }\n    //     } else {\n    //         data = changeSize(val)\n    //     }\n    //     //   console.log('data::', data)\n    //     return data\n    // }\n    // const getListData = (data) => {\n    //     data.forEach((item, index) => {\n    //         item.lineStyle = {\n    //             color: colorList[index],\n    //             width: 2\n    //         }\n    //         item.yAxisIndex = index\n    //     })\n    // }\n\n    let time = ref([{\n      data: [// 500, 800, 500, 200, 505, 700, 900, 700, 505, 600, 800, 905, 800, 700, 500, 600, 800, 750, 700, 600,\n        // 40, 35, 60, 20\n      ],\n      type: 'line',\n      smooth: true,\n      symbol: 'none',\n      name: '小车1' // 对准左侧y轴\n      // yAxisIndex: 0\n\n    }, {\n      data: [// 0, 20, 40, 58, 62, 50, 35, 55, 60, 70, 75, 65, 50, 40, 50, 70, 80, 95, 80, 60, 55, 70, 90, 70\n      ],\n      type: 'line',\n      smooth: true,\n      symbol: 'none',\n      name: '小车2' // 对准右侧y轴\n      // yAxisIndex: 1\n\n    }]);\n    const data = reactive({\n      options: {\n        // 图例设置\n        // legend: {},\n        // 在canvas中占据的大小\n        grid: {\n          left: '0%',\n          right: '0%',\n          top: '15%',\n          bottom: '3%',\n          containLabel: true\n        },\n        // 辅助线提示\n        // tooltip: {\n        //   trigger: 'axis'\n        // },\n        xAxis: {\n          type: 'category',\n          data: ['2022-08-10 01:00:00', '2022-08-10 02:00:00', '2022-08-10 03:00:00', '2022-08-10 04:00:00', '2022-08-10 05:00:00', '2022-08-10 06:00:00', '2022-08-10 07:00:00', '2022-08-10 08:00:00', '2022-08-10 09:00:00', '2022-08-10 10:00:00', '2022-08-10 11:00:00', '2022-08-10 12:00:00', '2022-08-10 13:00:00', '2022-08-10 14:00:00', '2022-08-10 15:00:00', '2022-08-10 16:00:00', '2022-08-10 17:00:00', '2022-08-10 18:00:00', '2022-08-10 19:00:00', '2022-08-10 20:00:00', '2022-08-10 21:00:00', '2022-08-10 22:00:00', '2022-08-10 23:00:00', '2022-08-10 00:00:00'],\n          axisLabel: {\n            // 坐标轴刻度标签的相关设置\n            show: true,\n            // 控制显隐\n            color: '#E4E9EB',\n            // x轴字体颜色\n            fontSize: 17,\n            //\n            margin: 15,\n            // x轴标签距离x轴距离\n            formatter: value => {\n              return dayjs(new Date(value)).format('HH:mm');\n            }\n          },\n          // x轴样式设置\n          axisLine: {\n            lineStyle: {\n              color: '#E4E9EB',\n              width: 2\n            }\n          },\n          // x轴刻度线显隐\n          axisTick: {\n            show: false\n          }\n        },\n        yAxis: [// 左侧y轴\n        {\n          type: 'value',\n          name: '米/秒',\n          // 名称位置\n          nameLocation: 'end',\n          // 名称间隔\n          nameGap: 20,\n          // y轴名称样式设置\n          nameTextStyle: {\n            color: '#E4E9EB',\n            fontSize: 15,\n            padding: [0, 50, 0, 0]\n          },\n          axisLabel: {\n            // 坐标轴刻度标签的相关设置\n            show: true,\n            // 控制显隐\n            color: '#E4E9EB',\n            // y轴字体颜色\n            fontSize: 17,\n            margin: 15\n          },\n          // y轴分割线样式设置\n          splitLine: {\n            show: true,\n            lineStyle: {\n              width: 2,\n              color: 'rgba(228, 233, 235, 0.1)'\n            }\n          }\n        }, // 右侧y轴\n        {\n          type: 'value',\n          name: 'hz',\n          // min: 0,\n          // max: 100,\n          // 名称位置\n          nameLocation: 'end',\n          // 名称间隔\n          nameGap: 20,\n          // y轴名称样式设置\n          nameTextStyle: {\n            color: '#E4E9EB',\n            fontSize: 17,\n            padding: [0, 0, 0, 50]\n          },\n          axisLabel: {\n            // 坐标轴刻度标签的相关设置\n            show: true,\n            // 控制显隐\n            color: '#E4E9EB',\n            // y轴字体颜色\n            fontSize: 17,\n            margin: 15\n          },\n          // y轴分割线样式设置\n          splitLine: {\n            show: true,\n            lineStyle: {\n              width: 2,\n              color: 'rgba(228, 233, 235, 0.1)'\n            }\n          }\n        }],\n        // 相关数据\n        series: time.value\n      }\n    }); // 初始化折线图\n\n    const initChart = () => {\n      // setTimeout(() => {\n      // let myChart = echarts.getInstanceByDom(\n      //     document.getElementById('vehicle2')\n      // );\n      // if (myChart == null) {\n      //     console.log('456');\n      //     myChart = echarts.init(document.getElementById('vehicle2'));\n      //     myChart.setOption(data.options);\n      // }\n      // console.log(456456);\n      myChart = echarts.init(document.getElementById('vehicle2'));\n      myChart.setOption(data.options); // }, 2000)\n    }; // 监听更改折线图y轴有关数据\n    // const changeyAxis = () => {\n    //     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\n    //     data.options.yAxis[0].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[1].axisLabel.margin = nowSize(15)\n    //     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\n    //     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\n    //     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\n    //     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\n    //     data.options.yAxis[0].nameGap = nowSize(20)\n    //     data.options.yAxis[1].nameGap = nowSize(20)\n    //     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\n    //     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\n    // }\n    // 监听更改折线图x轴有关数据\n    // const changexAxis = () => {\n    //     data.options.xAxis.axisLabel.fontSize = nowSize(17)\n    //     data.options.xAxis.axisLabel.margin = nowSize(15)\n    //     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\n    // }\n\n\n    const getListData = () => {\n      getOneData().then(res => {\n        console.log('res:::', res);\n\n        if (res.data) {\n          time.value.forEach((item, index) => {\n            item.data = res.data[index];\n            item.lineStyle = {\n              color: colorList[index],\n              width: 2\n            };\n            item.yAxisIndex = index;\n          });\n        }\n      }).catch(err => {\n        console.log('err:::', err);\n      });\n    };\n\n    onMounted(() => {\n      getListData(); // getListData(time.value)\n      // nextTick(() => {\n      //     initChart()\n      // })\n      // initChart()\n    });\n\n    window.onresize = ec => {\n      // 监听窗口大小变化\n      // myChart.resize() // 自适应大小变化\n      console.log('333333'); // changeyAxis()\n      // changexAxis()\n\n      myChart.setOption(data.options);\n      myChart.resize(); // 自适应大小变化\n\n      if (ec) return;\n    };\n\n    const __returned__ = {\n      echarts,\n      colorList,\n      myChart,\n      time,\n      data,\n      initChart,\n      getListData,\n      dayjs,\n      inject,\n      onMounted,\n      reactive,\n      ref,\n      getOneData\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["dayjs","inject","onMounted","reactive","ref","getOneData","echarts","colorList","myChart","time","data","type","smooth","symbol","name","options","grid","left","right","top","bottom","containLabel","xAxis","axisLabel","show","color","fontSize","margin","formatter","value","Date","format","axisLine","lineStyle","width","axisTick","yAxis","nameLocation","nameGap","nameTextStyle","padding","splitLine","series","initChart","init","document","getElementById","setOption","getListData","then","res","console","log","forEach","item","index","yAxisIndex","catch","err","window","onresize","ec","resize"],"sources":["F:/hub-code/echarts_project/src/views/test2/components/vehicleEchartsThree.vue"],"sourcesContent":["<template>\r\n    <div ref=\"vehicle1\" id=\"vehicle2\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport dayjs from 'dayjs'\r\nimport { inject, onMounted, reactive, ref } from 'vue'\r\nimport { getOneData } from '@/api/echarts'\r\n\r\nlet echarts = inject('ec')\r\nconst colorList = ['#F1B164', '#05D2FC']\r\nlet myChart\r\n\r\n// const changeSize = (val) => {\r\n//     let nowClientWidth =\r\n//         window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n//     // console.log('nowClientWidth', nowClientWidth)\r\n//     return val * (nowClientWidth / 1920)\r\n// }\r\n\r\n// const nowSize = (val) => {\r\n//     //   console.log(val instanceof Array)\r\n//     let data = ''\r\n//     let arr = []\r\n//     if (typeof val === 'object') {\r\n//         if (val instanceof Array) {\r\n//             val.forEach((item) => {\r\n//                 let size = changeSize(item)\r\n//                 arr.push(size)\r\n//             })\r\n//             data = arr\r\n//         }\r\n//     } else {\r\n//         data = changeSize(val)\r\n//     }\r\n//     //   console.log('data::', data)\r\n//     return data\r\n// }\r\n\r\n// const getListData = (data) => {\r\n//     data.forEach((item, index) => {\r\n//         item.lineStyle = {\r\n//             color: colorList[index],\r\n//             width: 2\r\n//         }\r\n//         item.yAxisIndex = index\r\n//     })\r\n// }\r\n\r\nlet time = ref([\r\n    {\r\n        data: [\r\n            // 500, 800, 500, 200, 505, 700, 900, 700, 505, 600, 800, 905, 800, 700, 500, 600, 800, 750, 700, 600,\r\n            // 40, 35, 60, 20\r\n        ],\r\n        type: 'line',\r\n        smooth: true,\r\n        symbol: 'none',\r\n        name: '小车1'\r\n        // 对准左侧y轴\r\n        // yAxisIndex: 0\r\n    },\r\n    {\r\n        data: [\r\n            // 0, 20, 40, 58, 62, 50, 35, 55, 60, 70, 75, 65, 50, 40, 50, 70, 80, 95, 80, 60, 55, 70, 90, 70\r\n        ],\r\n        type: 'line',\r\n        smooth: true,\r\n        symbol: 'none',\r\n        name: '小车2'\r\n        // 对准右侧y轴\r\n        // yAxisIndex: 1\r\n    }\r\n])\r\n\r\nconst data = reactive({\r\n    options: {\r\n        // 图例设置\r\n        // legend: {},\r\n        // 在canvas中占据的大小\r\n        grid: {\r\n            left: '0%',\r\n            right: '0%',\r\n            top: '15%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        // 辅助线提示\r\n        // tooltip: {\r\n        //   trigger: 'axis'\r\n        // },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: [\r\n                '2022-08-10 01:00:00',\r\n                '2022-08-10 02:00:00',\r\n                '2022-08-10 03:00:00',\r\n                '2022-08-10 04:00:00',\r\n                '2022-08-10 05:00:00',\r\n                '2022-08-10 06:00:00',\r\n                '2022-08-10 07:00:00',\r\n                '2022-08-10 08:00:00',\r\n                '2022-08-10 09:00:00',\r\n                '2022-08-10 10:00:00',\r\n                '2022-08-10 11:00:00',\r\n                '2022-08-10 12:00:00',\r\n                '2022-08-10 13:00:00',\r\n                '2022-08-10 14:00:00',\r\n                '2022-08-10 15:00:00',\r\n                '2022-08-10 16:00:00',\r\n                '2022-08-10 17:00:00',\r\n                '2022-08-10 18:00:00',\r\n                '2022-08-10 19:00:00',\r\n                '2022-08-10 20:00:00',\r\n                '2022-08-10 21:00:00',\r\n                '2022-08-10 22:00:00',\r\n                '2022-08-10 23:00:00',\r\n                '2022-08-10 00:00:00'\r\n            ],\r\n            axisLabel: {\r\n                // 坐标轴刻度标签的相关设置\r\n                show: true, // 控制显隐\r\n                color: '#E4E9EB', // x轴字体颜色\r\n                fontSize: 17, //\r\n                margin: 15, // x轴标签距离x轴距离\r\n                formatter: (value) => {\r\n                    return dayjs(new Date(value)).format('HH:mm')\r\n                }\r\n            },\r\n            // x轴样式设置\r\n            axisLine: {\r\n                lineStyle: {\r\n                    color: '#E4E9EB',\r\n                    width: 2\r\n                }\r\n            },\r\n            // x轴刻度线显隐\r\n            axisTick: {\r\n                show: false\r\n            }\r\n        },\r\n        yAxis: [\r\n            // 左侧y轴\r\n            {\r\n                type: 'value',\r\n                name: '米/秒',\r\n                // 名称位置\r\n                nameLocation: 'end',\r\n                // 名称间隔\r\n                nameGap: 20,\r\n                // y轴名称样式设置\r\n                nameTextStyle: {\r\n                    color: '#E4E9EB',\r\n                    fontSize: 15,\r\n                    padding: [0, 50, 0, 0]\r\n                },\r\n                axisLabel: {\r\n                    // 坐标轴刻度标签的相关设置\r\n                    show: true, // 控制显隐\r\n                    color: '#E4E9EB', // y轴字体颜色\r\n                    fontSize: 17,\r\n                    margin: 15\r\n                },\r\n                // y轴分割线样式设置\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        width: 2,\r\n                        color: 'rgba(228, 233, 235, 0.1)'\r\n                    }\r\n                }\r\n            },\r\n            // 右侧y轴\r\n            {\r\n                type: 'value',\r\n                name: 'hz',\r\n                // min: 0,\r\n                // max: 100,\r\n                // 名称位置\r\n                nameLocation: 'end',\r\n                // 名称间隔\r\n                nameGap: 20,\r\n                // y轴名称样式设置\r\n                nameTextStyle: {\r\n                    color: '#E4E9EB',\r\n                    fontSize: 17,\r\n                    padding: [0, 0, 0, 50]\r\n                },\r\n                axisLabel: {\r\n                    // 坐标轴刻度标签的相关设置\r\n                    show: true, // 控制显隐\r\n                    color: '#E4E9EB', // y轴字体颜色\r\n                    fontSize: 17,\r\n                    margin: 15\r\n                },\r\n                // y轴分割线样式设置\r\n                splitLine: {\r\n                    show: true,\r\n                    lineStyle: {\r\n                        width: 2,\r\n                        color: 'rgba(228, 233, 235, 0.1)'\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        // 相关数据\r\n        series: time.value\r\n    }\r\n})\r\n\r\n// 初始化折线图\r\nconst initChart = () => {\r\n    // setTimeout(() => {\r\n\r\n    // let myChart = echarts.getInstanceByDom(\r\n    //     document.getElementById('vehicle2')\r\n    // );\r\n    // if (myChart == null) {\r\n    //     console.log('456');\r\n    //     myChart = echarts.init(document.getElementById('vehicle2'));\r\n    //     myChart.setOption(data.options);\r\n    // }\r\n    // console.log(456456);\r\n\r\n    myChart = echarts.init(document.getElementById('vehicle2'))\r\n    myChart.setOption(data.options)\r\n    // }, 2000)\r\n\r\n}\r\n// 监听更改折线图y轴有关数据\r\n// const changeyAxis = () => {\r\n//     data.options.yAxis[0].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[1].axisLabel.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[1].axisLabel.margin = nowSize(15)\r\n//     data.options.yAxis[0].nameTextStyle.fontSize = nowSize(15)\r\n//     data.options.yAxis[1].nameTextStyle.fontSize = nowSize(17)\r\n//     data.options.yAxis[0].nameTextStyle.padding = nowSize([0, 50, 0, 0])\r\n//     data.options.yAxis[1].nameTextStyle.padding = nowSize([0, 0, 0, 50])\r\n//     data.options.yAxis[0].nameGap = nowSize(20)\r\n//     data.options.yAxis[1].nameGap = nowSize(20)\r\n//     data.options.yAxis[0].splitLine.lineStyle.width = nowSize(2)\r\n//     data.options.yAxis[1].splitLine.lineStyle.width = nowSize(2)\r\n// }\r\n// 监听更改折线图x轴有关数据\r\n// const changexAxis = () => {\r\n//     data.options.xAxis.axisLabel.fontSize = nowSize(17)\r\n//     data.options.xAxis.axisLabel.margin = nowSize(15)\r\n//     data.options.xAxis.axisLine.lineStyle.width = nowSize(2)\r\n// }\r\n\r\nconst getListData = () => {\r\n    getOneData().then((res) => {\r\n        console.log('res:::', res);\r\n        if (res.data) {\r\n            time.value.forEach((item, index) => {\r\n                item.data = res.data[index]\r\n                item.lineStyle = {\r\n                    color: colorList[index],\r\n                    width: 2\r\n                }\r\n                item.yAxisIndex = index\r\n            })\r\n            \r\n        }\r\n\r\n    }).catch((err) => {\r\n        console.log('err:::', err);\r\n    })\r\n}\r\n\r\nonMounted(() => {\r\n    getListData()\r\n    // getListData(time.value)\r\n\r\n    // nextTick(() => {\r\n\r\n    //     initChart()\r\n    // })\r\n    // initChart()\r\n})\r\nwindow.onresize = (ec) => {\r\n    // 监听窗口大小变化\r\n    // myChart.resize() // 自适应大小变化\r\n    console.log('333333')\r\n    // changeyAxis()\r\n    // changexAxis()\r\n    myChart.setOption(data.options)\r\n    myChart.resize() // 自适应大小变化\r\n    if (ec) return\r\n}\r\n</script>\r\n\r\n<style>\r\n.vehicle_echarts {\r\n    width: 92vw;\r\n    height: 28vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n.vehicle_echarts1 {\r\n    width: 65vw;\r\n    height: 35vh;\r\n    /* background-color: blanchedalmond; */\r\n    opacity: 0.7;\r\n    font-size: 1.3vw;\r\n}\r\n\r\n#vehicle2 {\r\n    width: 90%;\r\n    /* height: 100%; */\r\n    height: inherit;\r\n    margin-left: 5%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}