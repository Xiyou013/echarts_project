{"ast":null,"code":"import { attribute } from \"@/utils/enum\";\nimport { onMounted, reactive, ref, toRefs, watch } from \"@vue/runtime-core\";\nimport AddDialog from \"@/components/addDialog.vue\";\nimport DetailDrawer from \"@/components/detailDrawer.vue\"; // import { reactive } from '@vue/reactivity';\n\nimport btnRestore from \"@/utils/btnRestore\";\nimport store from \"@/store\";\nexport default {\n  components: {\n    AddDialog,\n    DetailDrawer\n  },\n  name: \"personList\",\n  props: {\n    searchFrom: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  setup(props) {\n    // let personList = personList;\n    let state = reactive(store.state.Original_god);\n    console.log(state.list);\n    let drawerDetail = reactive({\n      drawerDetail: false\n    });\n    let dialogFormVisible = reactive({\n      dialogFormVisible: false\n    });\n    let isEdit = reactive({\n      isEdit: false\n    });\n    let id = ref(null);\n    let persondata = reactive({\n      personList: []\n    });\n    let test = ref(null);\n    const listTest = [{}];\n    onMounted(() => {\n      persondata.personList = state.list;\n      console.log(\"---onMounted.searchFrom---:\", props.searchFrom);\n    });\n    watch(props.searchFrom, (newValue, oldValue) => {\n      if (newValue.isSearch) {\n        console.log(\"---searchFrom---\", newValue, oldValue);\n        searchList(newValue);\n        test.value = props.searchFrom.name;\n        console.log(\"---watch.test---:\", test.value);\n      }\n\n      if (newValue.name == \"\" && newValue.attribute == \"\") {\n        persondata.personList = state.list;\n      }\n\n      if (newValue || oldValue) return;\n    });\n\n    function addPerson(value, row) {\n      dialogFormVisible.dialogFormVisible = true;\n      isEdit.isEdit = value;\n\n      if (value && row) {\n        id.value = row.id;\n      } else {// id.value = null\n      }\n\n      console.log(\"---addPerson.dialogFormVisible---\", dialogFormVisible);\n      btnRestore(event);\n    }\n\n    function formatAttribute(row) {\n      let personType;\n      attribute.forEach(element => {\n        if (element.type === row.type) {\n          personType = element.name;\n        }\n      });\n      return personType;\n    }\n\n    function searchList(element) {\n      persondata.personList = state.list.filter(item => {\n        // console.log('---item---',item)\n        // console.log('---element---',element)\n        if (element.name && element.attribute) {\n          return element.name === item.name && element.attribute === item.type;\n        } else {\n          return element.name === item.name || element.attribute === item.type;\n        }\n      });\n    }\n\n    function changeDialog() {\n      dialogFormVisible.dialogFormVisible = false; // isEdit.isEdit = value;\n      //   id.value = null\n      //   console.log(\"---changeDialog.value---\", value);\n    }\n\n    function changeIsEdit(value) {\n      isEdit.isEdit = value;\n    }\n\n    function changeDrawer() {\n      drawerDetail.drawerDetail = false;\n    }\n\n    function onDetails() {\n      drawerDetail.drawerDetail = true;\n      console.log(\"---onDetails.drawerDetail---\", drawerDetail);\n      btnRestore(event);\n    }\n\n    function onDelete(row, index) {\n      console.log(\"---onDelete.row---\", row, index);\n      persondata.personList.splice(index, 1);\n      store.commit(\"changeList\", persondata.personList);\n      console.log(\"---persondata.personList and state.list---\", persondata.personList, state.list);\n      btnRestore(event);\n    }\n\n    return {\n      persondata,\n      dialogFormVisible,\n      isEdit,\n      id,\n      ...toRefs(drawerDetail),\n      addPerson,\n      formatAttribute,\n      changeDialog,\n      onDetails,\n      onDelete,\n      changeDrawer,\n      changeIsEdit,\n      test,\n      listTest\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["attribute","onMounted","reactive","ref","toRefs","watch","AddDialog","DetailDrawer","btnRestore","store","components","name","props","searchFrom","type","Object","default","setup","state","Original_god","console","log","list","drawerDetail","dialogFormVisible","isEdit","id","persondata","personList","test","listTest","newValue","oldValue","isSearch","searchList","value","addPerson","row","event","formatAttribute","personType","forEach","element","filter","item","changeDialog","changeIsEdit","changeDrawer","onDetails","onDelete","index","splice","commit"],"sourceRoot":"","sources":["F:\\hub-code\\echarts_project\\src\\components\\personList.vue"],"sourcesContent":["<template>\r\n  <div class=\"addbtn\">\r\n    <el-button\r\n      type=\"primary\"\r\n      size=\"small\"\r\n      class=\"add-btn\"\r\n      @click=\"addPerson(false)\"\r\n      >新增</el-button\r\n    >\r\n  </div>\r\n  {{ test }}\r\n  <input type=\"text\" v-model=\"test\" />\r\n  <el-select v-model=\"test\" placeholder=\"请选择属性\">\r\n    <el-option\r\n      v-for=\"(item, index) in listTest\"\r\n      :key=\"index\"\r\n      :label=\"item.name\"\r\n      :value=\"item.type\"\r\n    />\r\n  </el-select>\r\n  <el-table :data=\"persondata.personList\" stripe style=\"width: 100%\">\r\n    <el-table-column prop=\"name\" label=\"姓名\" width=\"180\" />\r\n    <el-table-column\r\n      prop=\"type\"\r\n      label=\"类型\"\r\n      width=\"180\"\r\n      :formatter=\"formatAttribute\"\r\n    />\r\n    <el-table-column prop=\"\" label=\"操作\">\r\n      <template #default=\"scope\">\r\n        <el-button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          @click=\"addPerson(true, scope.row)\"\r\n          >编辑</el-button\r\n        >\r\n        <el-button type=\"info\" size=\"small\" plain @click=\"onDetails\"\r\n          >查看</el-button\r\n        >\r\n        <el-button\r\n          type=\"danger\"\r\n          size=\"small\"\r\n          @click=\"onDelete(scope.row, scope.$index)\"\r\n          >删除</el-button\r\n        >\r\n      </template>\r\n    </el-table-column>\r\n  </el-table>\r\n  <AddDialog\r\n    :dialogVisible=\"dialogFormVisible\"\r\n    @changeDialog=\"changeDialog\"\r\n    @changeIsEdit=\"changeIsEdit\"\r\n    :isEdit=\"isEdit\"\r\n    :id=\"id\"\r\n  ></AddDialog>\r\n  <DetailDrawer\r\n    :drawer=\"drawerDetail\"\r\n    @changeDrawer=\"changeDrawer\"\r\n  ></DetailDrawer>\r\n</template>\r\n\r\n<script>\r\nimport { attribute } from \"@/utils/enum\";\r\nimport { onMounted, reactive, ref, toRefs, watch } from \"@vue/runtime-core\";\r\nimport AddDialog from \"@/components/addDialog.vue\";\r\nimport DetailDrawer from \"@/components/detailDrawer.vue\";\r\n// import { reactive } from '@vue/reactivity';\r\nimport btnRestore from \"@/utils/btnRestore\";\r\nimport store from \"@/store\";\r\n\r\nexport default {\r\n  components: { AddDialog, DetailDrawer },\r\n  name: \"personList\",\r\n  props: {\r\n    searchFrom: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n  setup(props) {\r\n    // let personList = personList;\r\n    let state = reactive(store.state.Original_god);\r\n    console.log(state.list);\r\n\r\n    let drawerDetail = reactive({\r\n      drawerDetail: false,\r\n    });\r\n    let dialogFormVisible = reactive({\r\n      dialogFormVisible: false,\r\n    });\r\n\r\n    let isEdit = reactive({\r\n      isEdit: false,\r\n    });\r\n\r\n    let id = ref(null);\r\n\r\n    let persondata = reactive({\r\n      personList: [],\r\n    });\r\n\r\n    let test = ref(null);\r\n    const listTest = [\r\n      {}\r\n    ]\r\n\r\n    onMounted(() => {\r\n      persondata.personList = state.list;\r\n      console.log(\"---onMounted.searchFrom---:\", props.searchFrom);\r\n    });\r\n    watch(props.searchFrom, (newValue, oldValue) => {\r\n      if (newValue.isSearch) {\r\n        console.log(\"---searchFrom---\", newValue, oldValue);\r\n        searchList(newValue);\r\n        test.value = props.searchFrom.name;\r\n        console.log(\"---watch.test---:\", test.value);\r\n      }\r\n      if (newValue.name == \"\" && newValue.attribute == \"\") {\r\n        persondata.personList = state.list;\r\n      }\r\n      if (newValue || oldValue) return;\r\n    });\r\n    function addPerson(value, row) {\r\n      dialogFormVisible.dialogFormVisible = true;\r\n      isEdit.isEdit = value;\r\n      if (value && row) {\r\n        id.value = row.id;\r\n      } else {\r\n        // id.value = null\r\n      }\r\n      console.log(\"---addPerson.dialogFormVisible---\", dialogFormVisible);\r\n      btnRestore(event);\r\n    }\r\n    function formatAttribute(row) {\r\n      let personType;\r\n      attribute.forEach((element) => {\r\n        if (element.type === row.type) {\r\n          personType = element.name;\r\n        }\r\n      });\r\n      return personType;\r\n    }\r\n    function searchList(element) {\r\n      persondata.personList = state.list.filter((item) => {\r\n        // console.log('---item---',item)\r\n        // console.log('---element---',element)\r\n        if (element.name && element.attribute) {\r\n          return element.name === item.name && element.attribute === item.type;\r\n        } else {\r\n          return element.name === item.name || element.attribute === item.type;\r\n        }\r\n      });\r\n    }\r\n    function changeDialog() {\r\n      dialogFormVisible.dialogFormVisible = false;\r\n      // isEdit.isEdit = value;\r\n      //   id.value = null\r\n      //   console.log(\"---changeDialog.value---\", value);\r\n    }\r\n    function changeIsEdit(value) {\r\n      isEdit.isEdit = value;\r\n    }\r\n    function changeDrawer() {\r\n      drawerDetail.drawerDetail = false;\r\n    }\r\n    function onDetails() {\r\n      drawerDetail.drawerDetail = true;\r\n      console.log(\"---onDetails.drawerDetail---\", drawerDetail);\r\n      btnRestore(event);\r\n    }\r\n    function onDelete(row, index) {\r\n      console.log(\"---onDelete.row---\", row, index);\r\n      persondata.personList.splice(index, 1);\r\n      store.commit(\"changeList\", persondata.personList);\r\n      console.log(\r\n        \"---persondata.personList and state.list---\",\r\n        persondata.personList,\r\n        state.list\r\n      );\r\n      btnRestore(event);\r\n    }\r\n\r\n    return {\r\n      persondata,\r\n      dialogFormVisible,\r\n      isEdit,\r\n      id,\r\n      ...toRefs(drawerDetail),\r\n      addPerson,\r\n      formatAttribute,\r\n      changeDialog,\r\n      onDetails,\r\n      onDelete,\r\n      changeDrawer,\r\n      changeIsEdit,\r\n      test,\r\n      listTest\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.add-btn {\r\n  width: 65px;\r\n  letter-spacing: 3px;\r\n  position: relative;\r\n  left: 15px;\r\n  top: -10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}